#!/bin/bash
source /var/lib/swarm/environment
source $configs/bee.cfg
source $configs/swarm.cfg

# Get Service Status
isHealthy="$(curl -s -X GET "http://localhost:14265/api/v1/info" -H  "accept: application/json"|jq '.data.isHealthy')"
beePruningDatabaseSize=${beePruningDatabaseSize//[!0-9]/}


if [ "$isHealthy" = "true" ] && [ ! -f "$logs/beePruner.lock" ] && [ -n "$beePruningDatabaseSize" ]; then
    # IFS=', ' read -r -a ARRAYhornetConfigs <<< "$hornetConfigs"
    # for hornetConfig in "${ARRAYhornetConfigs[@]}"
    # do
    #     pruningValue="$(jq '.pruning.size.enabled' $hornetDir/$hornetConfig.json)"
    #     if [ "$pruningValue" = "true" ]; then
    #         sudo jq '.pruning.size.enabled = false' $hornetDir/$hornetConfig.json|sponge $hornetDir/$hornetConfig.json
    #         restartHornet=true
    #     fi
    # done
    # if [ "$restartHornet" = "true" ]; then
    #     sudo systemctl restart hornet
    # fi

    # Check if enough buffer space is left
    getDiskSize=$(df -h $beeHome/storage | awk '{print $2}')
    getDiskSize=$(echo $getDiskSize | awk '{print $2}')
    diskSize=${getDiskSize::-1}
    let bufferSize=$diskSize-$beePruningDatabaseSize
    if [ $bufferSize -lt 10 ]; then
        let beePruningDatabaseSize=$diskSize-10
        sudo sed -i 's/beePruningDatabaseSize=.*/beePruningDatabaseSize='$beePruningDatabaseSize'/' $swarmConfigs/bee.cfg
    fi

    getBeeDbSize="$(du -sb $beeHome/storage | cut -f1)"
    let beeDbSize=$getBeeDbSize/1000000
    let beePruningDatabaseSize=$beePruningDatabaseSize*1000
    if [ $beeDbSize -gt 0 ] && [ $beeDbSize -gt $beePruningDatabaseSize ] 2>/dev/null; then
        # ADD LOCK
        sudo touch $logs/beePruner.lock
        while [ $beeDbSize -gt $beePruningDatabaseSize ] && [ "$killSwitch" != "true" ] 2>/dev/null; do
            # Start pruning process
            currentBeePruningIndex="$(curl -s -X GET "http://localhost:14265/api/v1/info" -H  "accept: application/json"|jq '.data.pruningIndex')"

            # Get difference between LSMI and pruningindex
            let beePruningIndex=$currentBeePruningIndex+51
            execPruning=`curl -s -X POST "http://localhost:14265/api/v1/control/database/prune" -H "Content-Type: application/json" -d '{"index": '$beePruningIndex'}'`

            if [[ "$execPruning" == *"{\"data\":{\"index\":"* ]]; then
                milestonesPruned=true
            else
                killSwitch=true
            fi
        getBeeDbSize="$(du -sb $beeHome/storage | cut -f1)"
        let beeDbSize=$getBeeDbSize/1000000
        done

        if [ "$killSwitch" = "true" ]; then
            pruningDate=`date '+%d-%m-%Y %H-%M-%S'`
            echo "$pruningDate [BEE PRUNER] - KillSwitch triggered -> $execPruning" >> $swarmLog
            # Remove LOCK
            sudo rm -rf $logs/beePruner.lock
        fi

        if [ "$milestonesPruned" = "true" ]; then
            # pruningDate=`date '+%d-%m-%Y %H-%M-%S'`
            # sudo sed -i "s,pruningDate=.*,pruningDate=\"$pruningDate\"," $logs/dbPruner
            echo "$pruningDate [BEE PRUNER] - Bee database pruned to milestones $beePruningIndex" >> $swarmLog

            # Remove LOCK
            sudo rm -rf $logs/beePruner.lock
        fi
    fi
    unset getBeeDbSize
    unset beeDbSize
    unset pruneDate
    unset beePruningDatabaseSize
    unset execPruning
    unset killSwitch
# else
#     if [ ! -n "$pruningDatabaseSize" ]; then
#         ( crontab -l | grep -v -F "$dbPrunerCronCmd" ) | crontab -
#     else
#         if ! [ "$pruningDatabaseSize" -eq "$pruningDatabaseSize" ]; then
#             ( crontab -l | grep -v -F "$dbPrunerCronCmd" ) | crontab -
#         fi
#     fi
fi

unset ARRAYhornetConfigs
unset hornetConfig

exit 0