#!/bin/bash
source $configs/swarm.cfg

# Watchdog
crontab -l | grep -q "$watchdogCronCmd" && watchdogStatus=enabled || watchdogStatus=disabled

if [ "$nodeUpdate" = "true" ]; then
    nodeUpdateStatus=enabled
else
    nodeUpdateStatus=disabled
fi

# Sync Check
if [ "$checkSync" = "true" ]; then
    checkSyncStatus=enabled
else
    checkSyncStatus=disabled
fi

# Proxy Check
if [ "$proxyCheck" = "true" ]; then
    proxyCheckStatus=enabled
else
    proxyCheckStatus=disabled
fi

if [ -z "$restartDate" ]; then
    restartDate="N/A"
fi

# Log Pruning
if [ "$logPruning" = "true" ]; then
    logPruning=enabled
else
    logPruning=disabled
fi

if [ "$allowDbReset" = "true" ]; then
    allowDbResetStatus=enabled
else
    allowDbResetStatus=disabled
fi

if [ "$swarmAutoUpdate" = "true" ]; then
    swarmAutoUpdateStatus=enabled
else
    swarmAutoUpdateStatus=disabled
fi

if [ "$ufw" = "true" ]; then
    firewallStatus=$(ufw status | grep -o "inactive")
    if [ "$firewallStatus" = "inactive" ]; then
        firewall=disabled
    else
        firewall=enabled
    fi
fi

if [ "$swarmInfo" = "true" ]; then
    if [ "$watchdogStatus" = "enabled" ]; then
        # OUTPUT
        whiptail --title "SWARM Info [v$version]" --msgbox "Theme: \"$theme\"\n\nWatchdog: $watchdogStatus\n\nSWARM updater: $swarmAutoUpdateStatus\nHornet updater: $nodeUpdateStatus\nSync-check: $checkSyncStatus\nMax unsync: $maxLmi milestones\nDB reset: $allowDbResetStatus\nProxy-check: $proxyCheckStatus\nLogpruning: $logPruning\nMax log size: ${logSize} MB\n\nFirewall: $firewall" 20 65
    else
        # OUTPUT
        whiptail --title "SWARM Info [v$version]" --msgbox "Theme: \"$theme\"\n\nWatchdog: $watchdogStatus\nFirewall: $firewall!" 14 65
    fi
fi
