#!/bin/bash
crontab -l | grep -q "$watchdogCronCmd" && watchdogStatus=enabled || watchdogStatus=disabled
while [ $exitCode -lt 1 ]; do
    if [ "$swarmAutoUpdate" = "true" ];
        swarmAutoUpdateMenu="Disable"
    else
        swarmAutoUpdateMenu="Enable"
    fi
    if [ "$proxyCheck" = "true" ]; then
        proxyCheckMenu="Disable"
    else
        proxyCheckMenu="Enable"
    fi
    CHOICE=$(
        whiptail --title "SWARM Menu" --menu "\nWachtdog: $watchdogStatus\n\nChoose an option" 28 65 0 \
        "1)" "SWARM Theme" \
        "2)" "$swarmAutoUpdateMenu SWARM Autoupdate" \
        "3)" "Hornet [Watchdog]" \
        "4)" "GoShimmer [Watchdog]" \
        "5)" "$proxyCheckMenu Proxy Check" \
        "6)" "Log Rotation [SWARM]" 3>&2 2>&1 1>&3
    )
    exitStatus=$?
    if [ "$exitStatus" = "1" ]; then
        exitCode=1
    fi
    case $CHOICE in
        "1)")
            while [ $exitCode -lt 1 ]; do
                source $configs/swarm.cfg
                CHOICE=$(
                    whiptail --title "SWARM - Theme" --menu "\nTheme: $theme\n\nChoose an option" 18 65 0 \
                    "1)" "Milkyway (default)" \
                    "2)" "HLM" \
                    "3)" "Mars" \
                    "4)" "Oreo" \
                    "5)" "Aftereight" \
                    "6)" "sMint" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        theme=milkyway
                        sudo sed -i 's/^theme=.*/theme="'$theme'"/' $configs/swarm.cfg
                        source $modules/swarm/themes
                        whiptail --title "Watchdog" --msgbox "SWARM theme \"$theme\" activated!" 8 65
                    ;;
                    "2)")
                        theme=hlm
                        sudo sed -i 's/^theme=.*/theme="'$theme'"/' $configs/swarm.cfg
                        source $modules/swarm/themes
                        whiptail --title "Watchdog" --msgbox "SWARM theme \"$theme\" activated!" 8 65
                    ;;
                    "3)")
                        theme=mars
                        sudo sed -i 's/^theme=.*/theme="'$theme'"/' $configs/swarm.cfg
                        source $modules/swarm/themes
                        whiptail --title "Watchdog" --msgbox "SWARM theme \"$theme\" activated!" 8 65
                    ;;
                    "4)")
                        theme=oreo
                        sudo sed -i 's/^theme=.*/theme="'$theme'"/' $configs/swarm.cfg
                        source $modules/swarm/themes
                        whiptail --title "Watchdog" --msgbox "SWARM theme \"$theme\" activated!" 8 65
                    ;;
                    "5)")
                        theme=aftereight
                        sudo sed -i 's/^theme=.*/theme="'$theme'"/' $configs/swarm.cfg
                        source $modules/swarm/themes
                        whiptail --title "Watchdog" --msgbox "SWARM theme \"$theme\" activated!" 8 65
                    ;;
                    "6)")
                        theme=smint
                        sudo sed -i 's/^theme=.*/theme="'$theme'"/' $configs/swarm.cfg
                        source $modules/swarm/themes
                        whiptail --title "Watchdog" --msgbox "SWARM theme \"$theme\" activated!" 8 65
                    ;;
                esac
            done
            exitCode=0
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                source $configs/swarm.cfg
                if [ "$swarmAutoUpdate" = "true" ]; then
                    swarmAutoUpdateStatus=enabled
                else
                    swarmAutoUpdateStatus=disabled
                fi
                CHOICE=$(
                    whiptail --title "SWARM - Update" --menu "\nSWARM Updater: $swarmAutoUpdateStatus\n\nChoose an option" 14 65 0 \
                    "1)" "Enable SWARM autoupdater" \
                    "2)" "Disable SWARM autoupdater" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        sudo sed -i 's/^swarmAutoUpdate=.*/swarmAutoUpdate=true/' $configs/swarm.cfg
                        whiptail --title "SWARM - Update" --msgbox "SWARM updater enabled!" 8 65
                    ;;
                    "2)")
                        sudo sed -i 's/^swarmAutoUpdate=.*/swarmAutoUpdate=false/' $configs/swarm.cfg
                        whiptail --title "SWARM - Update" --msgbox "SWARM updater disabled!" 8 65
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            while [ $exitCode -lt 1 ]; do
                source $configs/swarm.cfg
                if [ "$hornetAutoUpdate" = "true" ]; then
                    hornetAutoUpdateMenu="Disable"
                else
                    hornetAutoUpdateMenu="Enable"
                fi
                if [ "$hornetAllowDbReset" = "true" ]; then
                    hornetAllowDbResetMenu="Disable"
                else
                    hornetAllowDbResetMenu="Enable"
                fi

                CHOICE=$(
                    whiptail --title "SWARM - Hornet" --menu "\nChoose an option" 14 65 0 \
                    "1)" "$hornetAutoUpdateMenu Hornet AutoUpdater" \
                    "2)" "$hornetAllowDbResetMenu Hornet DB-Reset" \
                    "3)" "Hornet Sync-Check" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$hornetAutoUpdate" = "true" ]; then
                            hornetAutoUpdate=false
                            hornetAutoUpdateMenu="disabled"
                        else
                            hornetAutoUpdate=true
                            hornetAutoUpdateMenu="enabled"
                        fi
                        sudo sed -i 's/^hornetAutoUpdate=.*/hornetAutoUpdate='$hornetAutoUpdate'/' $configs/swarm.cfg
                        whiptail --title "Watchdog - Hornet" --msgbox "Hornet AutoUpdater $hornetAutoUpdateMenu!" 8 65
                    ;;
                    "2)")
                        if [ "$hornetAllowDbReset" = "true" ]; then
                            hornetAllowDbReset=false
                            hornetAllowDbResetMenu="disabled"
                        else
                            hornetAllowDbReset=true
                            hornetAllowDbResetMenu="enabled"
                        fi
                        sudo sed -i 's/^hornetAllowDbReset=.*/hornetAllowDbReset='$hornetAllowDbReset'/' $configs/swarm.cfg
                        whiptail --title "SWARM - Hornet" --msgbox "Hornet allow  DB-Reset $hornetAllowDbResetMenu!" 8 65
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            source $configs/swarm.cfg
                            if [ "$hornetSynCheck" = "true" ]; then
                                hornetSynCheckMenu="Disable"
                            else
                                hornetSynCheckMenu="Enable"
                            fi
                            CHOICE=$(
                                whiptail --title "Watchdog - Hornet" --menu "\nChoose an option" 14 65 0 \
                                "1)" "$hornetSynCheckMenu Sync-Check" \
                                "2)" "Set max milestones" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    if [ "$hornetCheckSync" = "true" ]; then
                                        hornetCheckSync=false
                                        hornetCheckSyncMenu="disabled"
                                    else
                                        hornetCheckSync=true
                                        hornetCheckSyncMenu="enabled"
                                    fi
                                    sudo sed -i 's/^hornetCheckSync=.*/hornetCheckSync='$hornetCheckSync'/' $configs/swarm.cfg
                                    whiptail --title "SWARM - Hornet" --msgbox "Hornet sync check $hornetCheckSyncMenu!" 8 65
                                ;;
                                "2)")
                                    source $configs/swarm.cfg
                                    maxLmi=$(whiptail --inputbox "\nSet the maximum difference between LMI and LSMI before the resync starts and a new database/snapshot is initialized" 10 65 $maxLmi --title "Watchdog - Sync" 3>&1 1>&2 2>&3)
                                    if [ ! -z "$maxLmi" ] && [ $maxLmi -gt 0 ] 2>/dev/null; then
                                        sudo sed -i 's/^maxLmi=.*/maxLmi='$maxLmi'/' $configs/swarm.cfg
                                        whiptail --title "Watchdog - Sync" --msgbox "Max milestones set to $maxLmi milestones!" 8 65
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "4)")
            while [ $exitCode -lt 1 ]; do
                source $configs/swarm.cfg
                if [ "$goshimmerAutoUpdate" = "true" ]; then
                    goshimmerAutoUpdateMenu="Disable"
                else
                    goshimmerAutoUpdateMenu="Enable"
                fi
                if [ "$goshimmerAllowDbReset" = "true" ]; then
                    goshimmerAllowDbResetMenu="Disable"
                else
                    goshimmerAllowDbResetMenu="Enable"
                fi
                if [ "$goshimmerCheckSync" = "true" ]; then
                    goshimmerCheckSyncMenu="Disable"
                else
                    goshimmerCheckSyncMenu="Enable"
                fi

                CHOICE=$(
                    whiptail --title "SWARM - GoShimmer" --menu "\nChoose an option" 14 65 0 \
                    "1)" "$goshimmerAutoUpdateMenu GoShimmer AutoUpdater" \
                    "2)" "$goshimmerAllowDbResetMenu GoShimmer DB-Reset" \
                    "3)" "$goshimmerCheckSyncMenu GoShimmer Sync-Check" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$goshimmerAutoUpdate" = "true" ]; then
                            goshimmerAutoUpdate=false
                            goshimmerAutoUpdateMenu="disabled"
                        else
                            goshimmerAutoUpdate=true
                            goshimmerAutoUpdateMenu="enabled"
                        fi
                        sudo sed -i 's/^goshimmerAutoUpdate=.*/goshimmerAutoUpdate='$goshimmerAutoUpdate'/' $configs/swarm.cfg
                        whiptail --title "Watchdog - GoShimmer" --msgbox "GoShimmer AutoUpdater $hgoshimmerAutoUpdateMenu!" 8 65
                    ;;
                    "2)")
                        if [ "$goshimmerAllowDbReset" = "true" ]; then
                            goshimmerAllowDbReset=false
                            goshimmerAllowDbResetMenu="disabled"
                        else
                            goshimmerAllowDbReset=true
                            goshimmerAllowDbResetMenu="enabled"
                        fi
                        sudo sed -i 's/^goshimmerAllowDbReset=.*/goshimmerAllowDbReset='$goshimmerAllowDbReset'/' $configs/swarm.cfg
                        whiptail --title "SWARM - GoShimmer" --msgbox "GoShimmer allow  DB-Reset $goshimmerAllowDbResetMenu!" 8 65
                    ;;
                    "2)")
                        if [ "$goshimmerCheckSync" = "true" ]; then
                            goshimmerCheckSync=false
                            goshimmerCheckSyncMenu="disabled"
                        else
                            goshimmerCheckSync=true
                            goshimmerCheckSyncMenu="enabled"
                        fi
                        sudo sed -i 's/^goshimmerCheckSync=.*/goshimmerCheckSync='$goshimmerCheckSync'/' $configs/swarm.cfg
                        whiptail --title "SWARM - GoShimmer" --msgbox "GoShimmer sync check $goshimmerCheckSyncMenu!" 8 65
                    ;;
                esac
            done
            exitCode=0
        ;;
        "5)")
            if [ "$proxyCheck" = "true" ]; then
                proxyCheck=false
                proxyCheckMenu="disabled"
            else
                proxyCheck=true
                proxyCheckMenu="enabled"
            fi
            sudo sed -i 's/^proxyCheck=.*/proxyCheck='$proxyCheck'/' $configs/swarm.cfg
            whiptail --title "Watchdog - Proxy" --msgbox "Proxy check $proxyCheckMenu!" 8 65
        ;;
        "6)")
            while [ $exitCode -lt 1 ]; do
                source $configs/swarm.cfg
                if [ "$logRotation" = "true" ]; then
                    logRotationMenu="Disable"
                else
                    logRotationMenu="Enable"
                fi
                CHOICE=$(
                    whiptail --title "Watchdog - SWARM Log" --menu "\nChoose an option" 14 65 0 \
                    "1)" "$logRotationMenu log rotation" \
                    "2)" "Set log size" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$logRotation" = "true" ]; then
                            logRotation=false
                            logRotationMenu="disabled"
                        else
                            logRotation=true
                            logRotationMenu="enabled"
                        fi
                        sudo sed -i 's/^logPruning=.*/logPruning='$logRotation'/' $configs/swarm.cfg
                        whiptail --title "Watchdog - SWARM Log" --msgbox "Log rotation $logRotationMenu!" 8 65
                    ;;
                    "2)")
                        source $configs/swarm.cfg
                        logSize=$(whiptail --inputbox "\nSet max log file size in Megabyte (MB)" 10 65 $logSize --title "Watchdog - SWARM Log" 3>&1 1>&2 2>&3)
                        if [ ! -z "$logSize" ] && [ $logSize -gt 0 ] 2>/dev/null; then
                            sudo sed -i 's/^logSize=.*/logSize='$logSize'/' $configs/swarm.cfg
                            whiptail --title "Watchdog - SWARM Log" --msgbox "Log size set to ${logSize}MB!" 8 65
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
    esac
done
exitCode=0