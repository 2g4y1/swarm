#!/bin/bash
crontab -l | grep -q "$watchdogCronCmd" && watchdogStatus=enabled || watchdogStatus=disabled
while [ $exitCode -lt 1 ]; do
    CHOICE=$(
        whiptail --title "SWARM Menu" --menu "\nWachtdog: $watchdogStatus\n\nChoose an option" 20 65 0 \
        "1)" "SWARM Theme" \
        "2)" "SWARM Autoupdate [Watchdog]" \
        "3)" "Hornet Updater [Watchdog]" \
        "4)" "DB Reset [Watchdog]" \
        "5)" "Sync Check [Watchdog]" \
        "6)" "Proxy Check [Watchdog]" \
        "7)" "SWARM Log pruning [Watchdog]" 3>&2 2>&1 1>&3
    )
    exitStatus=$?
    if [ "$exitStatus" = "1" ]; then
        exitCode=1
    fi
    case $CHOICE in
        "1)")
            while [ $exitCode -lt 1 ]; do
                source $configs/swarm.cfg
                CHOICE=$(
                    whiptail --title "SWARM - Theme" --menu "\nTheme: $theme\n\nChoose an option" 18 65 0 \
                    "1)" "Milkyway (default)" \
                    "2)" "HLM" \
                    "3)" "Mars" \
                    "4)" "Oreo" \
                    "5)" "Aftereight" \
                    "6)" "sMint" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        theme=milkyway
                        sudo sed -i 's/^theme=.*/theme="'$theme'"/' $configs/swarm.cfg
                        source $modules/swarm/themes
                        whiptail --title "Watchdog" --msgbox "SWARM theme \"$theme\" activated!" 8 65
                    ;;
                    "2)")
                        theme=hlm
                        sudo sed -i 's/^theme=.*/theme="'$theme'"/' $configs/swarm.cfg
                        source $modules/swarm/themes
                        whiptail --title "Watchdog" --msgbox "SWARM theme \"$theme\" activated!" 8 65
                    ;;
                    "3)")
                        theme=mars
                        sudo sed -i 's/^theme=.*/theme="'$theme'"/' $configs/swarm.cfg
                        source $modules/swarm/themes
                        whiptail --title "Watchdog" --msgbox "SWARM theme \"$theme\" activated!" 8 65
                    ;;
                    "4)")
                        theme=oreo
                        sudo sed -i 's/^theme=.*/theme="'$theme'"/' $configs/swarm.cfg
                        source $modules/swarm/themes
                        whiptail --title "Watchdog" --msgbox "SWARM theme \"$theme\" activated!" 8 65
                    ;;
                    "5)")
                        theme=aftereight
                        sudo sed -i 's/^theme=.*/theme="'$theme'"/' $configs/swarm.cfg
                        source $modules/swarm/themes
                        whiptail --title "Watchdog" --msgbox "SWARM theme \"$theme\" activated!" 8 65
                    ;;
                    "6)")
                        theme=smint
                        sudo sed -i 's/^theme=.*/theme="'$theme'"/' $configs/swarm.cfg
                        source $modules/swarm/themes
                        whiptail --title "Watchdog" --msgbox "SWARM theme \"$theme\" activated!" 8 65
                    ;;
                esac
            done
            exitCode=0
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                source $configs/swarm.cfg
                if [ "$swarmAutoUpdate" = "true" ]; then
                    swarmAutoUpdateStatus=enabled
                else
                    swarmAutoUpdateStatus=disabled
                fi
                CHOICE=$(
                    whiptail --title "SWARM - Update" --menu "\nSWARM Updater: $swarmAutoUpdateStatus\n\nChoose an option" 14 65 0 \
                    "1)" "Enable SWARM autoupdater" \
                    "2)" "Disable SWARM autoupdater" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        sudo sed -i 's/^swarmAutoUpdate=.*/swarmAutoUpdate=true/' $configs/swarm.cfg
                        whiptail --title "SWARM - Update" --msgbox "SWARM updater enabled!" 8 65
                    ;;
                    "2)")
                        sudo sed -i 's/^swarmAutoUpdate=.*/swarmAutoUpdate=false/' $configs/swarm.cfg
                        whiptail --title "SWARM - Update" --msgbox "SWARM updater disabled!" 8 65
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            if [ "$nodeUpdate" = "true" ]; then
                nodeUpdateStatus=enabled
            else
                nodeUpdateStatus=disabled
            fi
            CHOICE=$(
                whiptail --title "Watchdog - Updater" --menu "\nNode Updater: $nodeUpdateStatus\n\nChoose an option" 14 65 0 \
                "1)" "Enable Hornet updater" \
                "2)" "Disable Hornet updater" 3>&2 2>&1 1>&3
            )
            case $CHOICE in
                "1)")
                    sudo sed -i 's/^nodeUpdate=.*/nodeUpdate=true/' $configs/swarm.cfg
                    whiptail --title "Watchdog - Updater" --msgbox "Hornet updater enabled!" 8 65
                ;;
                "2)")
                    sudo sed -i 's/^nodeUpdate=.*/nodeUpdate=false/' $configs/swarm.cfg
                    whiptail --title "Watchdog - Updater" --msgbox "Hornet updater disabled!" 8 65
                ;;
            esac
        ;;
        "4)")
            if [ "$allowDbReset" = "true" ]; then
                allowDbResetStatus=enabled
            else
                allowDbResetStatus=disabled
            fi
            CHOICE=$(
                whiptail --title "Watchdog - Database" --menu "\nAllow DB reset: $allowDbResetStatus\n\nChoose an option" 14 65 0 \
                "1)" "Enable DB reset" \
                "2)" "Disable DB reset" 3>&2 2>&1 1>&3
            )
            case $CHOICE in
                "1)")
                    sudo sed -i 's/^allowDbReset=.*/allowDbReset=true/' $configs/swarm.cfg
                    whiptail --title "Watchdog - Database" --msgbox "DB reset enabled!" 8 65
                ;;
                "2)")
                    sudo sed -i 's/^allowDbReset=.*/allowDbReset=false/' $configs/swarm.cfg
                    whiptail --title "Watchdog - Database" --msgbox "DB reset disabled!" 8 65
                ;;
            esac
        ;;
        "5)")
            while [ $exitCode -lt 1 ]; do
                source $configs/swarm.cfg
                CHOICE=$(
                    whiptail --title "Watchdog - Settings" --menu "\nChoose an option" 14 65 0 \
                    "1)" "Sync Checker" \
                    "2)" "Set max milestones" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$checkSync" = "true" ]; then
                            checkSyncStatus=enabled
                        else
                            checkSyncStatus=disabled
                        fi
                        CHOICE=$(
                            whiptail --title "Watchdog - Sync" --menu "\nSync check: $checkSyncStatus\n\nChoose an option" 14 65 0 \
                            "1)" "Enable sync check" \
                            "2)" "Disable sync check" 3>&2 2>&1 1>&3
                        )
                        case $CHOICE in
                            "1)")
                                sudo sed -i 's/^checkSync=.*/checkSync=true/' $configs/swarm.cfg
                                whiptail --title "Watchdog - Sync" --msgbox "Sync check enabled!" 8 65
                            ;;
                            "2)")
                                sudo sed -i 's/^checkSync=.*/checkSync=false/' $configs/swarm.cfg
                                whiptail --title "Watchdog - Sync" --msgbox "Sync check disabled!" 8 65
                            ;;
                        esac
                    ;;
                    "2)")
                        source $configs/swarm.cfg
                        maxLmi=$(whiptail --inputbox "\nSet the maximum difference between LMI and LSMI before the resync starts and a new database/snapshot is initialized" 10 65 $maxLmi --title "Watchdog - Sync" 3>&1 1>&2 2>&3)
                        if [ ! -z "$maxLmi" ] && [ $maxLmi -gt 0 ] 2>/dev/null; then
                            sudo sed -i 's/^maxLmi=.*/maxLmi='$maxLmi'/' $configs/swarm.cfg
                            whiptail --title "Watchdog - Sync" --msgbox "Max milestones set to $maxLmi milestones!" 8 65
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
        "6)")
            if [ "$proxyCheck" = "true" ]; then
                proxyCheckStatus=enabled
            else
                proxyCheckStatus=disabled
            fi
            CHOICE=$(
                whiptail --title "Watchdog - Proxy" --menu "\nProxy check: $proxyCheckStatus\n\nChoose an option" 14 65 0 \
                "1)" "Enable proxy check" \
                "2)" "Disable proxy check" 3>&2 2>&1 1>&3
            )
            case $CHOICE in
                "1)")
                    sudo sed -i 's/^proxyCheck=.*/proxyCheck=true/' $configs/swarm.cfg
                    whiptail --title "Watchdog - Proxy" --msgbox "Proxy check enabled!" 8 65
                ;;
                "2)")
                    sudo sed -i 's/^proxyCheck=.*/proxyCheck=false/' $configs/swarm.cfg
                    whiptail --title "Watchdog - Proxy" --msgbox "Proxy check disabled!" 8 65
                ;;
            esac
        ;;
        "7)")
            while [ $exitCode -lt 1 ]; do
                source $configs/swarm.cfg
                if [ "$logPruning" = "true" ]; then
                    logPruningStatus=enabled
                else
                    logPruningStatus=disabled
                fi
                CHOICE=$(
                    whiptail --title "Watchdog - Log" --menu "\nLog pruning: $logPruningStatus\n\nChoose an option" 14 65 0 \
                    "1)" "Log pruning" \
                    "2)" "Set log size" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$logPruning" = "true" ]; then
                            logPruningStatus=enabled
                        else
                            logPruningStatus=disabled
                        fi
                        CHOICE=$(
                            whiptail --title "Watchdog - Log" --menu "\nLog pruning: $logPruningStatus\n\nChoose an option" 14 65 0 \
                            "1)" "Enable log pruning" \
                            "2)" "Disable log pruning" 3>&2 2>&1 1>&3
                        )
                        case $CHOICE in
                            "1)")
                                sudo sed -i 's/^logPruning=.*/logPruning=true/' $configs/swarm.cfg
                                whiptail --title "Watchdog - Log" --msgbox "Log pruning enabled!" 8 65
                            ;;
                            "2)")
                                sudo sed -i 's/^logPruning=.*/logPruning=false/' $configs/swarm.cfg
                                whiptail --title "Watchdog - Log" --msgbox "Log pruning disabled!" 8 65
                            ;;
                        esac
                    ;;
                    "2)")
                        source $configs/swarm.cfg
                        logSize=$(whiptail --inputbox "\nSet max log file size in Megabyte (MB)" 10 65 $logSize --title "Watchdog - Sync" 3>&1 1>&2 2>&3)
                        if [ ! -z "$logSize" ] && [ $logSize -gt 0 ] 2>/dev/null; then
                            sudo sed -i 's/^logSize=.*/logSize='$logSize'/' $configs/swarm.cfg
                            whiptail --title "Watchdog - Log" --msgbox "Log size set to ${logSize}MB!" 8 65
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
    esac
done
exitCode=0