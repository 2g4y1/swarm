#!/bin/bash
if [ ! -d "/tmp/swarm" ]; then
    tmpdir="/tmp/swarm"
    sudo mkdir -p $tmpdir
fi

# RLY OLD SHIT
if [ -f "$configs/hornetCfgBak" ]; then
    sudo mv -f $configs/hornetCfgBak $tmpswarm/hornet.cfg
fi
if [ -f "$configs/swarmCfgBak" ]; then
    sudo mv -f $configs/swarmCfgBak $tmpswarm/swarm.cfg
fi
if [ -f "$configs/proxyCfgBak" ]; then
    sudo mv -f $configs/proxyCfgBak $tmpswarm/proxy.cfg
fi
if [ -f "$logs/watchdogBak" ]; then
    sudo mv -f $logs/watchdogBak $tmpswarm/watchdog.cfg
fi

# BEFORE 0.6.5
if [ -f "$configs/hornet-backup.cfg" ]; then
    sudo mv -f $configs/hornet-backup.cfg $tmpswarm/hornet.cfg
fi
if [ -f "$configs/goshimmer-backup.cfg" ]; then
    sudo mv -f $configs/goshimmer-backup.cfg $tmpswarm/goshimmer.cfg
fi
if [ -f "$configs/swarm-backup.cfg" ]; then
    sudo mv -f $configs/swarm-backup.cfg $tmpswarm/swarm.cfg
fi
if [ -f "$configs/proxy-backup.cfg" ]; then
    sudo mv -f $configs/proxy-backup.cfg $tmpswarm/proxy.cfg
fi
if [ -f "$configs/watchdog-backup.cfg" ]; then
    sudo mv -f $configs/watchdog-backup.cfg $tmpswarm/watchdog.cfg
fi

###########################################################################################################################

if [ -f "$tmpswarm/hornet.cfg" ]; then
    source $tmpswarm/hornet.cfg

    ############# TMP CODE ###################
    if [ "$dbPruner" = "swarm" ]; then
        crontab -l | grep -q "$dbPrunerCronCmd" > /dev/null 2>&1 && ( crontab -l | grep -v -F "$dbPrunerCronCmd" ) | crontab - > /dev/null 2>&1
    fi
    ##########################################

    # Upater for Hornet.cfg
    if [ ! -z "$release" ]; then
        hornetRelease="$release"
    fi
    ####
    if [ -z "$hornetRelease" ]; then
        sudo sed -i 's/^hornetRelease=.*/hornetRelease="stable"/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetRelease=.*/hornetRelease="'$release'"/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$network" ]; then
        hornetNetwork="$network"
    fi
    if [ -z "$hornetNetwork" ]; then
        sudo sed -i 's/^hornetNetwork=.*/hornetNetwork="mainnet"/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetNetwork=.*/hornetNetwork="'$hornetNetwork'"/' $configs/hornet.cfg
    fi
    ####
    if [ -z "$hornetNodeAlias" ]; then
        sudo sed -i 's/^hornetNodeAlias=.*/hornetNodeAlias="Hornet"/' $configs/hornet.cfg
    else
        if [ "$hornetNodeAlias" = "goshimmerAlias" ]; then
            sudo sed -i 's/^hornetNodeAlias=.*/hornetNodeAlias="Hornet"/' $configs/hornet.cfg
        else
            sudo sed -i 's/^hornetNodeAlias=.*/hornetNodeAlias="'$hornetNodeAlias'"/' $configs/hornet.cfg
        fi
    fi
    ####
    if [ ! -z "$disablePlugins" ]; then
        hornetDisablePlugins="$disablePlugins"
    fi
    if [ -z "$hornetDisablePlugins" ]; then
        sudo sed -i 's/^hornetDisablePlugins=.*/hornetDisablePlugins=""/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetDisablePlugins=.*/hornetDisablePlugins="'$hornetDisablePlugins'"/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$enablePlugins" ]; then
        hornetEnablePlugins="$enablePlugins"
    fi
    if [ -z "$hornetEnablePlugins" ]; then
        hornetAutopeeringDisabled=$(echo $hornetDisablePlugins | grep -o autopeering)
        if [ -z "$hornetAutopeeringDisabled" ]; then
            sudo sed -i 's/^hornetEnablePlugins=.*/hornetEnablePlugins="autopeering"/' $configs/hornet.cfg
        else
            sudo sed -i 's/^hornetEnablePlugins=.*/hornetEnablePlugins=""/' $configs/hornet.cfg
        fi
    else
        hornetAutopeeringEnabled=$(echo $hornetEnablePlugins | grep -o autopeering)
        hornetAutopeeringDisabled=$(echo $hornetDisablePlugins | grep -o autopeering)
        if [ -z "$hornetAutopeeringEnabled" ] && [ -z "$hornetAutopeeringDisabled" ]; then
            hornetEnablePlugins="autopeering,$hornetEnablePlugins"
        fi
        sudo sed -i 's/^hornetEnablePlugins=.*/hornetEnablePlugins="'$hornetEnablePlugins'"/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$maxUnknownNeighbors" ]; then
        hornetUnknownPeersLimit=$maxUnknownNeighbors
    fi
    if [ -z "$hornetUnknownPeersLimit" ]; then
        sudo sed -i 's/^hornetUnknownPeersLimit=.*/hornetUnknownPeersLimit=2/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetUnknownPeersLimit=.*/hornetUnknownPeersLimit='$hornetUnknownPeersLimit'/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$snapshotInterval" ]; then
        hornetSnapshotInterval=$snapshotInterval
    fi
    if [ -z "$hornetSnapshotInterval" ]; then
        sudo sed -i 's/^hornetSnapshotInterval=.*/hornetSnapshotInterval=8640/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetSnapshotInterval=.*/hornetSnapshotInterval='$hornetSnapshotInterval'/' $configs/hornet.cfg
    fi
    ####
    if [ -z "$hornetGossipPort" ]; then
        sudo sed -i 's/^hornetGossipPort=.*/hornetGossipPort=15600/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetGossipPort=.*/hornetGossipPort='$hornetGossipPort'/' $configs/hornet.cfg
    fi
    ####
    if [ -z "$hornetAutopeeringPort" ]; then
        sudo sed -i 's/^hornetAutopeeringPort=.*/hornetAutopeeringPort=14626/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetAutopeeringPort=.*/hornetAutopeeringPort='$hornetAutopeeringPort'/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$pow" ]; then
        hornetPow="$pow"
    fi
    if [ -z "$hornetPow" ]; then
        sudo sed -i 's/^hornetPow=.*/hornetPow=false/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetPow=.*/hornetPow='$hornetPow'/' $configs/hornet.cfg
    fi
    ###
    if [ ! -z "$powWorkerCount" ]; then
        hornetPowWorkerCount=$powWorkerCount
    fi
    if [ -z "$hornetPowWorkerCount" ]; then
        sudo sed -i 's/^hornetPowWorkerCount=.*/hornetPowWorkerCount=1/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetPowWorkerCount=.*/hornetPowWorkerCount='$hornetPowWorkerCount'/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$dbEngine" ]; then
        hornetDbEngine="$dbEngine"
    fi
    if [ -z "$hornetDbEngine" ]; then
        sudo sed -i 's/^hornetDbEngine=.*/hornetDbEngine="rocksdb"/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetDbEngine=.*/hornetDbEngine="'$hornetDbEngine'"/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$autoRevalidation" ]; then
        hornetAutoRevalidation=$autoRevalidation
    fi
    if [ -z "$hornetAutoRevalidation" ]; then
        sudo sed -i 's/^hornetAutoRevalidation=.*/hornetAutoRevalidation=false/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetAutoRevalidation=.*/hornetAutoRevalidation='$hornetAutoRevalidation'/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$pruning" ]; then
        hornetPruning=$pruning
    fi
    if [ -z "$hornetPruning" ]; then
        sudo sed -i 's/^hornetPruning=.*/hornetPruning=true/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetPruning=.*/hornetPruning='$hornetPruning'/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$pruningDatabaseSize" ]; then
        hornetPruningDatabaseSize=$pruningDatabaseSize
    fi
    if [ -z "$hornetPruningDatabaseSize" ]; then
        sudo sed -i 's/^hornetPruningDatabaseSize=.*/hornetPruningDatabaseSize=/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetPruningDatabaseSize=.*/hornetPruningDatabaseSize='$hornetPruningDatabaseSize'/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$pruningPercentage" ]; then
        hornetPruningPercentage=$pruningPercentage
    fi
    if [ -z "$hornetPruningPercentage" ]; then
        sudo sed -i 's/^hornetPruningPercentage=.*/hornetPruningPercentage=5/' $configs/hornet.cfg
    else
        hornetPruningPercentage=$(echo ${pruningPercentage%.*})
        sudo sed -i 's/^hornetPruningPercentage=.*/hornetPruningPercentage='$hornetPruningPercentage'/' $configs/hornet.cfg      
    fi
    ####
    if [ ! -z "$pruningCooldownTime" ]; then
        hornetPruningCooldownTime=$pruningCooldownTime
    fi
    if [ -z "$hornetPruningCooldownTime" ]; then
        sudo sed -i 's/^hornetPruningCooldownTime=.*/hornetPruningCooldownTime=5/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetPruningCooldownTime=.*/hornetPruningCooldownTime='$hornetPruningCooldownTime'/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$username" ]; then
        hornetUsername="$username"
    fi
    if [ -z "$hornetUsername" ]; then
        sudo sed -i 's/^hornetUsername=.*/hornetUsername=""/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetUsername=.*/hornetUsername="'$hornetUsername'"/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$passwordHash" ]; then
        hornetPasswordHash="$passwordHash"
    fi
    if [ -z "$hornetPasswordHash" ]; then
        sudo sed -i 's/^hornetPasswordHash=.*/hornetPasswordHash="0000000000000000000000000000000000000000000000000000000000000000"/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetPasswordHash=.*/hornetPasswordHash="'$hornetPasswordHash'"/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$passwordSalt" ]; then
        hornetPasswordSalt="$passwordSalt"
    fi
    if [ -z "$hornetPasswordSalt" ]; then
        sudo sed -i 's/^hornetPasswordSalt=.*/hornetPasswordSalt="0000000000000000000000000000000000000000000000000000000000000000"/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetPasswordSalt=.*/hornetPasswordSalt="'$hornetPasswordSalt'"/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$p2pIdentity" ]; then
        hornetP2pIdentity="$p2pIdentity"
    fi
    if [ -z "$hornetP2pIdentity" ]; then
        sudo sed -i 's/^hornetP2pIdentity=.*/hornetP2pIdentity=""/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetP2pIdentity=.*/hornetP2pIdentity="'$hornetP2pIdentity'"/' $configs/hornet.cfg
    fi
    ####
    if [ "$hornetNetwork" = "mainnet" ]; then
        if [ ! -z "$validation" ]; then
            hornetValidation=$validation
        fi
        if [ -z "$hornetValidation" ]; then
            sudo sed -i 's/^hornetValidation=.*/hornetValidation=true/' $configs/hornet.cfg
        else
            sudo sed -i 's/^hornetValidation=.*/hornetValidation='$hornetValidation'/' $configs/hornet.cfg
        fi
    else
        sudo sed -i 's/^hornetValidation=.*/hornetValidation=false/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$validationLog" ]; then
        hornetValidationLog=$validationLog
    fi
    if [ -z "$hornetValidationLog" ]; then
        sudo sed -i 's/^hornetValidationLog=.*/hornetValidationLog=false/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetValidationLog=.*/hornetValidationLog='$hornetValidationLog'/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$runAsEntryNode" ]; then
        hornetRunAsEntryNode=$runAsEntryNode
    fi
    if [ -z "$hornetRunAsEntryNode" ]; then
        sudo sed -i 's/^hornetRunAsEntryNode=.*/hornetRunAsEntryNode=false/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetRunAsEntryNode=.*/hornetRunAsEntryNode='$hornetRunAsEntryNode'/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$jwtAuthEnabled" ]; then
        hornetJwtAuthEnabled=$jwtAuthEnabled
    fi
    if [ -z "$hornetJwtAuthEnabled" ]; then
        sudo sed -i 's/^hornetJwtAuthEnabled=.*/hornetJwtAuthEnabled=false/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetJwtAuthEnabled=.*/hornetJwtAuthEnabled='$hornetJwtAuthEnabled'/' $configs/hornet.cfg
    fi
    ####
    if [ ! -z "$jwtAuthSalt" ]; then
        hornetJwtAuthSalt="$jwtAuthSalt"
    fi
    if [ -z "$hornetJwtAuthSalt" ]; then
        sudo sed -i 's/^hornetJwtAuthSalt=.*/hornetJwtAuthSalt="HORNET"/' $configs/hornet.cfg
    else
        sudo sed -i 's/^hornetJwtAuthSalt=.*/hornetJwtAuthSalt="'$hornetJwtAuthSalt'"/' $configs/hornet.cfg
    fi    
fi

####################################################################################################################################

if [ -f "$tmpswarm/goshimmer.cfg" ]; then
    source $tmpswarm/goshimmer.cfg

    if [ -z "$goshimmerDashboardAuthEnabled" ]; then
        sudo sed -i 's/^goshimmerDashboardAuthEnabled=.*/goshimmerDashboardAuthEnabled=false/' $configs/goshimmer.cfg
    else
        sudo sed -i 's/^goshimmerDashboardAuthEnabled=.*/goshimmerDashboardAuthEnabled='$goshimmerDashboardAuthEnabled'/' $configs/goshimmer.cfg
    fi

    if [ -z "$goshimmerWebapiAuthEnabled" ]; then
        sudo sed -i 's/^goshimmerWebapiAuthEnabled=.*/goshimmerWebapiAuthEnabled=false/' $configs/goshimmer.cfg
    else
        sudo sed -i 's/^goshimmerWebapiAuthEnabled=.*/goshimmerWebapiAuthEnabled='$goshimmerWebapiAuthEnabled'/' $configs/goshimmer.cfg
    fi

    if [ -z "$goshimmerDisablePlugins" ]; then
        sudo sed -i 's/^goshimmerDisablePlugins=.*/goshimmerDisablePlugins=""/' $configs/goshimmer.cfg
    else
        sudo sed -i 's/^goshimmerDisablePlugins=.*/goshimmerDisablePlugins="'$goshimmerDisablePlugins'"/' $configs/goshimmer.cfg
    fi

    if [ -z "$goshimmerEnablePlugins" ]; then
        sudo sed -i 's/^goshimmerEnablePlugins=.*/goshimmerEnablePlugins=""/' $configs/goshimmer.cfg
    else
        sudo sed -i 's/^goshimmerEnablePlugins=.*/goshimmerEnablePlugins="'$goshimmerEnablePlugins'"/' $configs/goshimmer.cfg
    fi

    if [ -z "$goshimmerGossipPort" ]; then
        sudo sed -i 's/^goshimmerGossipPort=.*/goshimmerGossipPort=14666/' $configs/goshimmer.cfg
    else
        sudo sed -i 's/^goshimmerGossipPort=.*/goshimmerGossipPort='$goshimmerGossipPort'/' $configs/goshimmer.cfg
    fi

    if [ -z "$goshimmerAutopeeringPort" ]; then
        sudo sed -i 's/^goshimmerAutopeeringPort=.*/goshimmerAutopeeringPort=14626/' $configs/goshimmer.cfg
    else
        sudo sed -i 's/^goshimmerAutopeeringPort=.*/goshimmerAutopeeringPort='$goshimmerAutopeeringPort'/' $configs/goshimmer.cfg
    fi

    if [ -z "$goshimmerSeed" ]; then
        sudo sed -i 's/^goshimmerSeed=.*/goshimmerSeed=""/' $configs/goshimmer.cfg
    else
        sudo sed -i 's~^goshimmerSeed=.*~goshimmerSeed="'$goshimmerSeed'"~g' $configs/goshimmer.cfg
    fi
fi

####################################################################################################################################

if [ -f "$tmpswarm/proxy.cfg" ]; then
    source $tmpswarm/proxy.cfg

    # Upater for Nginx.cfg
    if [ -z "$domain" ]; then
        sudo sed -i 's/^domain=.*/domain="myhornetnode.domain.tld"/' $configs/proxy.cfg
    else
        sudo sed -i 's/^domain=.*/domain="'$domain'"/' $configs/proxy.cfg
    fi

    if [ -z "$hornetApiPort" ]; then
        sudo sed -i 's/^hornetApiPort=.*/hornetApiPort=443/' $configs/proxy.cfg
    else
        sudo sed -i 's/^hornetApiPort=.*/hornetApiPort='$hornetApiPort'/' $configs/proxy.cfg
    fi

    if [ -z "$goshimmerApiPort" ]; then
        sudo sed -i 's/^goshimmerApiPort=.*/goshimmerApiPort=443/' $configs/proxy.cfg
    else
        sudo sed -i 's/^goshimmerApiPort=.*/goshimmerApiPort='$goshimmerApiPort'/' $configs/proxy.cfg
    fi
fi

####################################################################################################################################

if [ -f "$tmpswarm/swarm.cfg" ]; then
    source $tmpswarm/swarm.cfg

    # Upater for SWARM.cfg
    if [ -z "$updateNotifier" ]; then
        sudo sed -i 's/^updateNotifier=.*/updateNotifier=true/' $configs/swarm.cfg
    else
        sudo sed -i 's/^updateNotifier=.*/updateNotifier='$updateNotifier'/' $configs/swarm.cfg
    fi

    if [ -z "$theme" ]; then
        sudo sed -i 's/^theme=.*/theme="default"/' $configs/swarm.cfg
    else
        sudo sed -i 's/^theme=.*/theme="'$theme'"/' $configs/swarm.cfg
    fi

    if [ -z "$swarmAutoUpdate" ]; then
        sudo sed -i 's/^swarmAutoUpdate=.*/swarmAutoUpdate=true/' $configs/swarm.cfg
    else
        sudo sed -i 's/^swarmAutoUpdate=.*/swarmAutoUpdate='$swarmAutoUpdate'/' $configs/swarm.cfg
    fi

    if [ -z "$hornetAutoUpdate" ]; then
        sudo sed -i 's/^hornetAutoUpdate=.*/hornetAutoUpdate=true/' $configs/swarm.cfg
    else
        sudo sed -i 's/^hornetAutoUpdate=.*/hornetAutoUpdate='$hornetAutoUpdate'/' $configs/swarm.cfg
    fi

    if [ -z "$goshimmerAutoUpdate" ]; then
        sudo sed -i 's/^goshimmerAutoUpdate=.*/goshimmerAutoUpdate=true/' $configs/swarm.cfg
    else
        sudo sed -i 's/^goshimmerAutoUpdate=.*/goshimmerAutoUpdate='$goshimmerAutoUpdate'/' $configs/swarm.cfg
    fi

    if [ "$keepDb" = "true" ] || "$allowDbReset" = "false" ] > /dev/null 2>&1; then
        sudo sed -i 's/^hornetAllowDbReset=.*/hornetAllowDbReset=false/' $configs/swarm.cfg
    else
        if [ -z "$hornetAllowDbReset" ]; then
            sudo sed -i 's/^hornetAllowDbReset=.*/hornetAllowDbReset=true/' $configs/swarm.cfg
        else
            sudo sed -i 's/^hornetAllowDbReset=.*/hornetAllowDbReset='$hornetAllowDbReset'/' $configs/swarm.cfg
        fi
    fi

    if [ -z "$goshimmerAllowDbReset" ]; then
        sudo sed -i 's/^goshimmerAllowDbReset=.*/goshimmerAllowDbReset=true/' $configs/swarm.cfg
    else
        sudo sed -i 's/^goshimmerAllowDbReset=.*/goshimmerAllowDbReset='$goshimmerAllowDbReset'/' $configs/swarm.cfg
    fi

    if [ -z "$hornetCheckSync" ]; then
        sudo sed -i 's/^hornetCheckSync=.*/hornetCheckSync=true/' $configs/swarm.cfg
    else
        sudo sed -i 's/^hornetCheckSync=.*/hornetCheckSync='$hornetCheckSync'/' $configs/swarm.cfg
    fi

    if [ -z "$goshimmerCheckSync" ]; then
        sudo sed -i 's/^goshimmerCheckSync=.*/goshimmerCheckSync=true/' $configs/swarm.cfg
    else
        sudo sed -i 's/^goshimmerCheckSync=.*/goshimmerCheckSync='$goshimmerCheckSync'/' $configs/swarm.cfg
    fi  

    if [ -z "$maxLmi" ]; then
        sudo sed -i 's/^maxLmi=.*/maxLmi=360/' $configs/swarm.cfg
    else
        sudo sed -i 's/^maxLmi=.*/maxLmi='$maxLmi'/' $configs/swarm.cfg
    fi

    if [ -z "$proxyCheck" ]; then
        sudo sed -i 's/^proxyCheck=.*/proxyCheck=true/' $configs/swarm.cfg
    else
        sudo sed -i 's/^proxyCheck=.*/proxyCheck='$proxyCheck'/' $configs/swarm.cfg
    fi

    if [ -z "$logRotation" ]; then
        sudo sed -i 's/^logRotation=.*/logRotation=true/' $configs/swarm.cfg
    else
        sudo sed -i 's/^logRotation=.*/logRotation='$logRotation'/' $configs/swarm.cfg
    fi

    if [ -z "$logSize" ]; then
        sudo sed -i 's/^logSize=.*/logSize=10/' $configs/swarm.cfg
    else
        sudo sed -i 's/^logSize=.*/logSize='$logSize'/' $configs/swarm.cfg
    fi
fi

####################################################################################################################################

if [ -f "$tmpswarm/watchdog.cfg" ]; then
    source $tmpswarm/watchdog.cfg

    # Updater for watchdog.log
    sudo sed -i 's/^hornetStatusCounter=.*/hornetStatusCounter='$hornetStatusCounter'/' $logs/watchdog
    sudo sed -i 's/^hornetSyncCounter=.*/hornetSyncCounter='$hornetSyncCounter'/' $logs/watchdog
    sudo sed -i 's/^goshimmerStatusCounter=.*/goshimmerStatusCounter='$goshimmerStatusCounter'/' $logs/watchdog
    sudo sed -i 's/^goshimmerSyncCounter=.*/goshimmerSyncCounter='$goshimmerSyncCounter'/' $logs/watchdog
fi

####################################################################################################################################

#### REMOVE ALL BAKs
sudo rm -rf $tmpswarm > /dev/null 2>&1
