#!/bin/bash

###########################################################################################################################
if [ -f "$configs/hornetCfgBak" ]; then
    source $configs/hornetCfgBak
    # Upater for Hornet.cfg
    if [ -z "$release" ]; then
        sudo sed -i 's/release=.*/release="stable"/' $configs/hornet.cfg
    else
        sudo sed -i 's/release=.*/release="'$release'"/' $configs/hornet.cfg
    fi

    if [ -z "$network" ]; then
        sudo sed -i 's/network=.*/network="mainnet"/' $configs/hornet.cfg
    else
        sudo sed -i 's/network=.*/network="'$network'"/' $configs/hornet.cfg
    fi

    if [ -z "$nodeAlias" ]; then
        sudo sed -i 's/nodeAlias=.*/nodeAlias="Hornet"/' $configs/hornet.cfg
    else
        sudo sed -i 's/nodeAlias=.*/nodeAlias="'$nodeAlias'"/' $configs/hornet.cfg
    fi

    if [ -z "$disablePlugins" ]; then
        sudo sed -i 's/disablePlugins=.*/disablePlugins=""/' $configs/hornet.cfg
    else
        sudo sed -i 's/disablePlugins=.*/disablePlugins="'$disablePlugins'"/' $configs/hornet.cfg
    fi

    if [ -z "$enablePlugins" ]; then
        sudo sed -i 's/enablePlugins=.*/enablePlugins=""/' $configs/hornet.cfg
    else
        sudo sed -i 's/enablePlugins=.*/enablePlugins="'$enablePlugins'"/' $configs/hornet.cfg
    fi

    if [ -z "$maxUnknownNeighbors" ]; then
        sudo sed -i 's/maxUnknownNeighbors=.*/maxUnknownNeighbors=0/' $configs/hornet.cfg
    else
        sudo sed -i 's/maxUnknownNeighbors=.*/maxUnknownNeighbors='$maxUnknownNeighbors'/' $configs/hornet.cfg
    fi

    if [ -z "$snapshotInterval" ]; then
        sudo sed -i 's/snapshotInterval=.*/snapshotInterval=8640/' $configs/hornet.cfg
    else
        sudo sed -i 's/snapshotInterval=.*/snapshotInterval='$snapshotInterval'/' $configs/hornet.cfg
    fi

    if [ -z "$gossipPort" ]; then
        sudo sed -i 's/gossipPort=.*/gossipPort=15600/' $configs/hornet.cfg
    else
        sudo sed -i 's/gossipPort=.*/gossipPort='$gossipPort'/' $configs/hornet.cfg
    fi

    if [ -z "$autopeeringPort" ]; then
        sudo sed -i 's/autopeeringPort=.*/autopeeringPort=14626/' $configs/hornet.cfg
    else
        sudo sed -i 's/autopeeringPort=.*/autopeeringPort='$autopeeringPort'/' $configs/hornet.cfg
    fi

    if [ -z "$pow" ]; then
        sudo sed -i 's/pow=.*/pow=false/' $configs/hornet.cfg
    else
        sudo sed -i 's/pow=.*/pow='$pow'/' $configs/hornet.cfg
    fi

    if [ -z "$powWorkerCount" ]; then
        sudo sed -i 's/powWorkerCount=.*/powWorkerCount=1/' $configs/hornet.cfg
    else
        sudo sed -i 's/powWorkerCount=.*/powWorkerCount='$powWorkerCount'/' $configs/hornet.cfg
    fi

    if [ -z "$dbEngine" ]; then
        sudo sed -i 's/dbEngine=.*/dbEngine="rocksdb"/' $configs/hornet.cfg
    else
        sudo sed -i 's/dbEngine=.*/dbEngine="'$dbEngine'"/' $configs/hornet.cfg
    fi

    if [ -z "$dbAutoRevalidation" ]; then
        sudo sed -i 's/dbAutoRevalidation=.*/dbAutoRevalidation=false/' $configs/hornet.cfg
    else
        sudo sed -i 's/dbAutoRevalidation=.*/dbAutoRevalidation='$dbAutoRevalidation'/' $configs/hornet.cfg
    fi

    if [ -z "$pruning" ]; then
        sudo sed -i 's/pruning=.*/pruning=true/' $configs/hornet.cfg
    else
        sudo sed -i 's/pruning=.*/pruning='$pruning'/' $configs/hornet.cfg
    fi

    if [ -z "$dbPruner" ]; then
        sudo sed -i 's/dbPruner=.*/dbPruner="hornet"/' $configs/hornet.cfg
    else
        sudo sed -i 's/dbPruner=.*/dbPruner="'$dbPruner'"/' $configs/hornet.cfg
    fi

    if [ -z "$pruningDatabaseSize" ]; then
        sudo sed -i 's/pruningDatabaseSize=.*/pruningDatabaseSize=/' $configs/hornet.cfg
    else
        sudo sed -i 's/pruningDatabaseSize=.*/pruningDatabaseSize='$pruningDatabaseSize'/' $configs/hornet.cfg
    fi

    if [ -z "$pruningPercentage" ]; then
        sudo sed -i 's/pruningPercentage=.*/pruningPercentage=5.0/' $configs/hornet.cfg
    else
        sudo sed -i 's/pruningPercentage=.*/pruningPercentage='$pruningPercentage'/' $configs/hornet.cfg
    fi

    if [ -z "$pruningCooldownTime" ]; then
        sudo sed -i 's/pruningCooldownTime=.*/pruningCooldownTime=5/' $configs/hornet.cfg
    else
        sudo sed -i 's/pruningCooldownTime=.*/pruningCooldownTime='$pruningCooldownTime'/' $configs/hornet.cfg
    fi

    if [ -z "$username" ]; then
        sudo sed -i 's/username=.*/username=""/' $configs/hornet.cfg
    else
        sudo sed -i 's/username=.*/username="'$username'"/' $configs/hornet.cfg
    fi

    if [ -z "$passwordHash" ]; then
        sudo sed -i 's/passwordHash=.*/passwordHash="0000000000000000000000000000000000000000000000000000000000000000"/' $configs/hornet.cfg
    else
        sudo sed -i 's/passwordHash=.*/passwordHash="'$passwordHash'"/' $configs/hornet.cfg
    fi

    if [ -z "$passwordSalt" ]; then
        sudo sed -i 's/passwordSalt=.*/passwordSalt="0000000000000000000000000000000000000000000000000000000000000000"/' $configs/hornet.cfg
    else
        sudo sed -i 's/passwordSalt=.*/passwordSalt="'$passwordSalt'"/' $configs/hornet.cfg
    fi

    if [ -z "$p2pIdentity" ]; then
        sudo sed -i 's/p2pIdentity=.*/p2pIdentity=""/' $configs/hornet.cfg
    else
        sudo sed -i 's/p2pIdentity=.*/p2pIdentity="'$p2pIdentity'"/' $configs/hornet.cfg
    fi

    if [ "$network" = "mainnet" ]; then
        if [ -z "$validation" ]; then
            sudo sed -i 's/validation=.*/validation=true/' $configs/hornet.cfg
        else
            sudo sed -i 's/validation=.*/validation='$validation'/' $configs/hornet.cfg
        fi
    else
        sudo sed -i 's/validation=.*/validation=false/' $configs/hornet.cfg
    fi

    if [ -z "$validationLog" ]; then
        sudo sed -i 's/validationLog=.*/validationLog=false/' $configs/hornet.cfg
    else
        sudo sed -i 's/validationLog=.*/validationLog='$validationLog'/' $configs/hornet.cfg
    fi

    if [ -z "$runAsEntryNode" ]; then
        sudo sed -i 's/runAsEntryNode=.*/runAsEntryNode=false/' $configs/hornet.cfg
    else
        sudo sed -i 's/runAsEntryNode=.*/runAsEntryNode='$runAsEntryNode'/' $configs/hornet.cfg
    fi

    # Delete Bak file
    rm -rf $configs/hornetCfgBak
fi

####################################################################################################################################

if [ -f "$configs/proxyCfgBak" ]; then
    source $configs/proxyCfgBak
    # Upater for Nginx.cfg
    if [ -z "$domain" ]; then
        sudo sed -i 's/domain=.*/domain="myhornetnode.domain.tld"/' $configs/proxy.cfg
    else
        sudo sed -i 's/domain=.*/domain="'$domain'"/' $configs/proxy.cfg
    fi

    if [ -z "$apiPort" ]; then
        sudo sed -i 's/apiPort=.*/apiPort=443/' $configs/proxy.cfg
    else
        sudo sed -i 's/apiPort=.*/apiPort='$apiPort'/' $configs/proxy.cfg
    fi

    # Delete Bak file
    rm -rf $configs/proxyCfgBak
fi

####################################################################################################################################

if [ -f "$configs/swarmCfgBak" ]; then
    source $configs/swarmCfgBak
    # Upater for SWARM.cfg
    if [ -z "$updateNotifier" ]; then
        sudo sed -i 's/updateNotifier=.*/updateNotifier=true/' $configs/swarm.cfg
    else
        sudo sed -i 's/updateNotifier=.*/updateNotifier='$updateNotifier'/' $configs/swarm.cfg
    fi

    if [ -z "$theme" ]; then
        sudo sed -i 's/theme=.*/theme="default"/' $configs/swarm.cfg
    else
        sudo sed -i 's/theme=.*/theme="'$theme'"/' $configs/swarm.cfg
    fi

    if [ -z "$swarmAutoUpdate" ]; then
        sudo sed -i 's/swarmAutoUpdate=.*/swarmAutoUpdate=true/' $configs/swarm.cfg
    else
        sudo sed -i 's/swarmAutoUpdate=.*/swarmAutoUpdate='$swarmAutoUpdate'/' $configs/swarm.cfg
    fi

    if [ -z "$nodeUpdate" ]; then
        sudo sed -i 's/nodeUpdate=.*/nodeUpdate=true/' $configs/swarm.cfg
    else
        sudo sed -i 's/nodeUpdate=.*/nodeUpdate='$nodeUpdate'/' $configs/swarm.cfg
    fi

    if [ "$keepDb" = "true" ]; then
        sudo sed -i 's/allowDbReset=.*/allowDbReset=false/' $configs/swarm.cfg
    else
        if [ -z "$allowDbReset" ]; then
            sudo sed -i 's/allowDbReset=.*/allowDbReset=true/' $configs/swarm.cfg
        else
            sudo sed -i 's/allowDbReset=.*/allowDbReset='$allowDbReset'/' $configs/swarm.cfg
        fi
    fi

    if [ -z "$checkSync" ]; then
        sudo sed -i 's/checkSync=.*/checkSync=true/' $configs/swarm.cfg
    else
        sudo sed -i 's/checkSync=.*/checkSync='$checkSync'/' $configs/swarm.cfg
    fi    

    if [ -z "$maxLmi" ]; then
        sudo sed -i 's/maxLmi=.*/maxLmi=360/' $configs/swarm.cfg
    else
        sudo sed -i 's/maxLmi=.*/maxLmi='$maxLmi'/' $configs/swarm.cfg
    fi

    if [ -z "$proxyCheck" ]; then
        sudo sed -i 's/proxyCheck=.*/proxyCheck=true/' $configs/swarm.cfg
    else
        sudo sed -i 's/proxyCheck=.*/proxyCheck='$proxyCheck'/' $configs/swarm.cfg
    fi

    if [ -z "$logPruning" ]; then
        sudo sed -i 's/logPruning=.*/logPruning=true/' $configs/swarm.cfg
    else
        sudo sed -i 's/logPruning=.*/logPruning='$logPruning'/' $configs/swarm.cfg
    fi

    if [ -z "$logSize" ]; then
        sudo sed -i 's/logSize=.*/logSize=10/' $configs/swarm.cfg
    else
        sudo sed -i 's/logSize=.*/logSize='$logSize'/' $configs/swarm.cfg
    fi

    # Delete Bak file
    rm -rf $configs/swarmCfgBak
fi

####################################################################################################################################

if [ -f "$logs/watchdogBak" ]; then
    source $logs/watchdogBak
    # Updater for watchdog.log
    sudo sed -i 's/statusCounter=.*/statusCounter='$statusCounter'/' $logs/watchdog
    sudo sed -i 's/syncCounter=.*/syncCounter='$syncCounter'/' $logs/watchdog
    sudo sed -i "s,restartDate=.*,restartDate=\"$restartDate\"," $logs/watchdog
    # Delete Bak file
    rm -rf $logs/watchdogBak
fi

####################################################################################################################################

#### REMOVE ALL BAKs
rm -rf $logs/*Bak$ $configs/*Bak$