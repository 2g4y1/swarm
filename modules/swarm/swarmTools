#!/bin/bash
while [ $exitCode -lt 1 ]; do
    CHOICE=$(
        whiptail --title "SWARM - Plugins" --menu "\nChoose an option" 12 65 0 \
        "1)" "Perform system updates" \
        "2)" "Manage System Firewall" \
        "3)" "Show Server IP4/IP6" 3>&2 2>&1 1>&3
    )
    exitStatus=$?
    if [ "$exitStatus" = "1" ]; then
        exitCode=1
    fi
    case $CHOICE in
        "1)")
            if (whiptail --title "System Updates" --yesno --defaultno "Do you really want to perform a system update?" 8 65); then
                sudo apt-get update
                sudo apt dist-upgrade -y
                sudo apt upgrade -y
                sudo apt autoremove -y
                if [ -f /var/run/reboot-required ]; then
                    if (whiptail --title "System Updates" --yesno --defaultno "It is recommended to reboot the system, do you want to reboot the system now?" 8 65); then
                        if [ -f "/usr/bin/hornet" ]; then
                            hornetStatus="$(systemctl show -p ActiveState --value hornet)"
                            if [ "$hornetStatus" = "active" ]; then
                                sudo systemctl stop hornet
                            fi
                        fi
                        if [ -f "/usr/bin/goshimmer" ]; then
                            goshimmerStatus="$(systemctl show -p ActiveState --value goshimmer)"
                            if [ "$goshimmerStatus" = "active" ]; then
                                sudo systemctl stop goshimmer
                            fi
                        fi
                        sudo reboot
                    fi
                else
                    whiptail --title "System Updates" --msgbox "System updates successfully performed!" 8 65
                fi
            fi
        ;;
        "2)")
            if [ "$ufw" = "true" ]; then
                firewallStatus=$(ufw status | grep -o "inactive")
                if [ "$firewallStatus" = "inactive" ]; then
                    firewall=disabled
                else
                    firewall=enabled
                fi
                CHOICE=$(
                    whiptail --title "System Firewall" --menu "\nFirewall: $firewall\n\nChoose an option" 14 65 0 \
                    "1)" "Enable Firewall" \
                    "2)" "Disable Firewall" 3>&2 2>&1 1>&3
                )
                case $CHOICE in
                    "1)")
                        sudo ufw default deny incoming > /dev/null 2>&1
                        sshPort=$(sudo grep "Port [0-9]" /etc/ssh/sshd_config | awk  '{print $2}')
                        if [ $sshPort -eq $sshPort ]; then
                            sudo ufw allow $sshPort/tcp > /dev/null 2>&1
                            sudo ufw --force enable > /dev/null 2>&1
                            whiptail --title "System Firewall" --msgbox "Firewall successfully activated!" 8 65
                        else
                            sshPort=$(whiptail --inputbox "\nPlease enter your SSH port" 10 65 --title "System Firewall" 3>&1 1>&2 2>&3)
                            if [ $sshPort -eq $sshPort ]; then
                                sudo ufw allow $sshPort/tcp > /dev/null 2>&1
                                sudo ufw --force enable > /dev/null 2>&1
                                whiptail --title "System Firewall" --msgbox "Firewall successfully activated!" 8 65
                            else
                                whiptail --title "System Firewall" --msgbox "Firewall could not be activated because no valid SSH port was specified/found!" 8 65
                            fi
                        fi
                    ;;
                    "2)")
                        sudo ufw disable > /dev/null 2>&1
                        whiptail --title "System Firewall" --msgbox "Firewall successfully deactivated!" 8 65
                    ;;
                esac
            fi
        ;;
        "3)")
            ip4=$(hostname -I | cut -d " " -f 1)
            ip6=$(hostname -I | cut -d " " -f 2)
            whiptail --title "SWARM Menu" --msgbox "\nNetwork Addresses\n\nIPv4: $ip4\nIPv6: $ip6" 12 65
        ;;
    esac
done
exitCode=0