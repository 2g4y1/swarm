#!/bin/bash

# INSTALL HORNET
if [ ! -f "/usr/bin/hornet" ]; then
    {
        echo 0
        echo 10
        source $configs/hornet.cfg
        echo 20
        sudo snap install go --classic > /dev/null 2>&1
        echo 30
        wget -qO - https://ppa.hornet.zone/pubkey.txt | sudo apt-key add - > /dev/null 2>&1
        if [ "$release" = "stable" ]; then
        sudo sh -c 'echo "deb http://ppa.hornet.zone stable main" > /etc/apt/sources.list.d/hornet.list'
        fi
        if [ "$release" = "testing" ]; then
            sudo sh -c 'echo "deb http://ppa.hornet.zone stable main" > /etc/apt/sources.list.d/hornet.list'
            sudo sh -c 'echo "deb http://ppa.hornet.zone testing main" >> /etc/apt/sources.list.d/hornet.list'
            sudo sh -c 'echo "deb http://ppa.hornet.zone alpha main" >> /etc/apt/sources.list.d/hornet.list'
        fi
        echo 40
        sudo apt-get -qq update > /dev/null 2>&1
        echo 50
        sudo apt-get -qq install hornet -y > /dev/null 2>&1
        echo 60
        # Check which network
        if [ "$network" = "mainnet" ]; then
            echo "" > /etc/default/hornet
        fi
        if [ "$network" = "testnet" ]; then
            echo "OPTIONS=\"--config config_chrysalis_testnet.json\"" > /etc/default/hornet
        fi
        if [ "$network" = "comnet" ]; then
            echo "OPTIONS=\"--config config_comnet.json\"" > /etc/default/hornet
        fi
        echo 70
        if [ ! -f "/etc/systemd/system/multi-user.target.wants/hornet.service" ]; then
            sudo systemctl enable hornet > /dev/null 2>&1
        fi
        echo 80
        if [ ! -d "$hornetDir" ]; then
            sudo mkdir -p $hornetDir
            if [ ! -s "$hornetDir/peering.json" ]; then
                sudo wget -q -O $hornetDir/peering.json https://raw.githubusercontent.com/gohornet/hornet/main/peering.json
            fi
            chown -R hornet:hornet $hornetDir
        fi
        echo 100
        sleep 0.5
    } | whiptail --gauge "Please wait while installing Hornet..." 6 65 0
    if [ -f "/usr/bin/hornet" ]; then
        {
            echo 0
            echo 10
            # Port Check
            if [ $goshimmerAutopeeringPort -eq $hornetAutopeeringPort ] && [ -f "/usr/bin/goshimmer" ]; then
                let hornetAutopeeringPort=$hornetAutopeeringPort+1
                sudo sed -i 's/^hornetAutopeeringPort=.*/hornetAutopeeringPort='$hornetAutopeeringPort'/' $configs/hornet.cfg
            fi
            echo 20
            # CALL MODULE CONFIGPARSER
            echo 40
            source $modules/hornet/configParser
            echo 60
            if [ "$ufw" = "true" ]; then
                sudo ufw allow $hornetGossipPort/tcp > /dev/null 2>&1
                sudo ufw allow $hornetAutopeeringPort/udp > /dev/null 2>&1
            fi
            echo 80
            sudo systemctl restart hornet > /dev/null 2>&1
            sleep 2
            status="$(systemctl show -p ActiveState --value hornet)"
            if [ "$status" != "active" ]; then
                sudo systemctl start hornet
            fi
            echo 100
        } | whiptail --gauge "Please wait while Hornet will be prepared..." 6 65 0
        whiptail --title "Hornet Installer" --msgbox "Hornet installation finished!\n\nYou need to open the following ports in your home router for peering\n\nGossip: $hornetGossipPort/tcp\nAutopeering: $hornetAutopeeringPort" 10 65
    else
        whiptail --title "Hornet Installer" --msgbox "Error while installing Hornet. Please check hornet.cfg and try again!" 8 65
    fi
else
    whiptail --title "Hornet Installer" --msgbox "Hornet already installed or not set in the SWARM.cfg!" 8 65
fi