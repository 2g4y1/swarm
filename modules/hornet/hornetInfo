#!/bin/bash
source $configs/hornet.cfg

hornetStatus=$(systemctl show -p ActiveState --value hornet)

nodeVersion="$(curl -s -X GET "http://localhost:14265/api/v1/info" -H  "accept: application/json"|jq '.data.version')"
if [ -z "$nodeVersion" ]; then
    nodeVersion="N/A"
else
    nodeVersion="${nodeVersion%\"}"
    nodeVersion="${nodeVersion#\"}"
fi
healthy="$(curl -s -X GET "http://localhost:14265/api/v1/info" -H  "accept: application/json"|jq '.data.isHealthy')"
if [ -z "$healthy" ]; then
    healthy="N/A"
else
    if [ "$healthy" = "true" ]; then
        healthy="Yes"
    else
        healthy="No"
    fi
fi

# DB size
if [ -d "$hornetDir/${network}db" ]; then
    getCurrentDbSize="$(du -sb $hornetDir/${network}db | cut -f1)"
    let getCurrentDbSizeInMb=$getCurrentDbSize/1000000
    if [ $getCurrentDbSizeInMb -gt 999 ]; then
        let getCurrentDbSizeInGb=$getCurrentDbSize/1000000000
        currentDbSize="${getCurrentDbSizeInGb} GB"
    else
        currentDbSize="${getCurrentDbSizeInMb} MB"
    fi
else
    currentDbSize="N/A"
fi

if [ "$jwtAuthEnabled" = "true" ]; then
    jwtAuthEnabledStatus=enabled
else
    jwtAuthEnabledStatus=disabled
fi

if [ "$autoRevalidation" = "true" ]; then
    autoRevalidationStatus=enabled
else
    autoRevalidationStatus=disabled
fi

if [ "$pruning" = "true" ]; then
    pruningStatus=enabled
else
    pruningStatus=disabled
fi

if [ "$pow" = "true" ]; then
    powStatus=enabled
else
    powStatus=disabled
fi

if [ "$validation" = "true" ]; then
    validationStatus=enabled
else
    validationStatus=disabled
fi

if [ "$validationLog" = "true" ]; then
    validationLogStatus=enabled
else
    validationLogStatus=disabled
fi

if [ -f "/usr/bin/hornet" ]; then
    # OUTPUT
    whiptail --scrolltext --title "Hornet Info [v$version]" --msgbox "Hornet: $hornetStatus\nVersion: v$nodeVersion\nNetwork: $network\nHealthy: $healthy\nDB size: $currentDbSize\n\nAlias: $nodeAlias\nJWT-Auth: $jwtAuthEnabledStatus\nPoW: $powStatus\nLS Interval: $snapshotInterval milestones\nGossip Port: ${gossipPort}/tcp\nAutopeering Port: ${autopeeringPort}/udp\nDB Engine: $dbEngine\nDB Revalidation: $autoRevalidationStatus\n\nPruning: $pruningStatus\nMax DB size: ${pruningDatabaseSize} GB\nPruning % (Hornet): ${pruningPercentage}%\nPruning Cooldown: $pruningCooldownTime minutes\n\nEnabled Plugins: \"$enablePlugins\"\nDisabled Plugins: \"$disablePlugins\"\n\nValidation: $validationStatus\nValidation Log: $validationLogStatus\n\nIdentity: \"$p2pIdentity\"" 34 68
else
    # OUTPUT
    whiptail --title "Hornet Info [v$version]" --msgbox "Hornet not installed!" 14 65
fi
