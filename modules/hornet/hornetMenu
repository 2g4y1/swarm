#!/bin/bash
# HORNET MENU
while [ $exitCode -lt 1 ]; do
    clear
    CHOICE=$(
        whiptail --title "Hornet Menu" --menu "\nChoose an option" 16 65 0 \
        "1)" "Hornet Info" \
        "2)" "Hornet Configurations" \
        "3)" "Hornet Debugging" \
        "4)" "Hornet Installer" 3>&2 2>&1 1>&3
    )
    exitstatus=$?
    if [ "$exitstatus" = "1" ]; then
        exitCode=1
    fi

    case $CHOICE in
        "1)")
            source $modules/hornet/hornetInfo
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                clear
                CHOICE=$(
                    whiptail --title "Hornet Configurations" --menu "\nChoose an option" 16 65 0 \
                    "1)" "Hornet configuration" \
                    "2)" "Advanced Configuration" 3>&2 2>&1 1>&3
                )

                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        if [ -f "/usr/bin/hornet" ]; then
                            source $modules/hornet/hornetConfiguration
                        else
                            whiptail --title "Hornet Configuration" --msgbox "Hornet installation not found, please install Hornet first!" 8 65
                        fi
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            clear
                            CHOICE=$(
                                whiptail --title "Hornet Configurations" --menu "\nChoose an option" 16 65 0 \
                                "1)" "Peering.json" \
                                "2)" "Mainnet.json" \
                                "3)" "Comnet.json" \
                                "4)" "Testnet.json" \
                                "5)" "Hornet.cfg (SWARM)" 3>&2 2>&1 1>&3
                            )

                            exitstatus=$?
                            if [ "$exitstatus" = "1" ]; then
                                exitCode=1
                            fi

                            case $CHOICE in
                                "1)")
                                    sudo nano $hornetDir/peering.json
                                    if (whiptail --title "Hornet Menu" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                        {
                                            echo 0
                                            echo 50
                                            sudo systemctl restart hornet
                                            echo 100
                                            sleep 0.25
                                        } | whiptail --gauge "Please wait while Hornet is restarting..." 6 65 0
                                    fi
                                ;;
                                "2)")
                                    sudo nano $hornetDir/config.json
                                    if (whiptail --title "Hornet Menu" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                        {
                                            echo 0
                                            echo 50
                                            sudo systemctl restart hornet
                                            echo 100
                                            sleep 0.25
                                        } | whiptail --gauge "Please wait while Hornet is restarting..." 6 65 0
                                    fi
                                ;;
                                "3)")
                                    sudo nano $hornetDir/config_comnet.json
                                    if (whiptail --title "Hornet Menu" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                        {
                                            echo 0
                                            echo 50
                                            sudo systemctl restart hornet
                                            echo 100
                                            sleep 0.25
                                        } | whiptail --gauge "Please wait while Hornet is restarting..." 6 65 0
                                    fi
                                ;;
                                "4)")
                                    sudo nano $hornetDir/config_chrysalis_testnet.json
                                    if (whiptail --title "Hornet Menu" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                        {
                                            echo 0
                                            echo 50
                                            sudo systemctl restart hornet
                                            echo 100
                                            sleep 0.25
                                        } | whiptail --gauge "Please wait while Hornet is restarting..." 6 65 0
                                    fi
                                ;;
                                "5)")
                                    sudo nano $configs/hornet.cfg
                                    if (whiptail --title "Hornet Menu" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                        {
                                            echo 0
                                            source $modules/hornet/configParser
                                            echo 50
                                            sudo systemctl restart hornet
                                            echo 100
                                            sleep 0.25
                                        } | whiptail --gauge "Please wait while Hornet is restarting..." 6 65 0
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            CHOICE=$(
                whiptail --title "Hornet Debugging" --menu "\nChoose your option" 16 65 0 \
                "1)" "Show Hornet log" \
                "2)" "Start/Stop Hornet" \
                "3)" "Reset Hornet Database" 3>&2 2>&1 1>&3
            )
            case $CHOICE in
                "1)")
                    # Display last 65 lines of log
                    sudo journalctl -fu hornet | less -FRSXM
                ;;
                "2)")
                    CHOICE=$(
                        whiptail --title "Hornet Menu" --menu "\nChoose your option" 16 65 0 \
                        "1)" "Restart Hornet" \
                        "2)" "Start Hornet" \
                        "3)" "Stop Hornet" \
                        "4)" "Status Hornet" 3>&2 2>&1 1>&3
                    )
                    case $CHOICE in
                        "1)")
                            {
                                echo 0
                                echo 50
                                sudo systemctl restart hornet
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while Hornet is restarting..." 6 65 0
                            whiptail --title "Hornet Menu" --msgbox "Hornet successfully restarted" 8 65
                        ;;
                        "2)")
                            {
                                echo 0
                                echo 50
                                sudo systemctl start hornet
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while Hornet is starting..." 6 65 0
                            whiptail --title "Hornet Menu" --msgbox "Hornet successfully started" 8 65
                        ;;
                        "3)")
                            {
                                echo 0
                                echo 50
                                sudo systemctl stop hornet
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while Hornet is stopping..." 6 65 0
                            whiptail --title "Hornet Menu" --msgbox "Hornet successfully stopped" 8 65
                        ;;
                        "4)")
                            hornetStatus="$(sudo systemctl status hornet)"
                            whiptail --title "Hornet Menu" --msgbox "$hornetStatus" 15 65
                        ;;
                    esac
                ;;
                "3)")
                    if (whiptail --title "Hornet Menu" --yesno --defaultno "Are you sure you want to delete the hornet database?" 8 65); then
                        source $configs/hornet.cfg
                        {
                            echo 0
                            echo 50
                            sudo systemctl stop hornet
                            sudo rm -rf $hornetDir/${network}db $hornetDir/snapshots/${network}/*.bin $hornetDir/p2pstore
                            sudo sed -i 's/^hornetStatusCounter=.*/hornetStatusCounter=0/' $logs/watchdog
                            sudo sed -i 's/^hornetSyncCounter=.*/hornetSyncCounter=0/' $logs/watchdog
                            sudo systemctl start hornet
                            echo 100
                            sleep 0.25
                        } | whiptail --gauge "Please wait while the cleanup is running..." 6 65 0
                        whiptail --title "Hornet Menu" --msgbox "${network}DB successfully reset" 8 65
                    fi
                ;;
            esac
        ;;
        "4)")
            CHOICE=$(
                whiptail --title "Hornet Installer" --menu "\nChoose your option" 16 65 0 \
                "1)" "Update Hornet" \
                "2)" "Install Hornet" \
                "3)" "Remove Hornet" 3>&2 2>&1 1>&3
            )
            case $CHOICE in
                "1)")
                    if [ -f "/usr/bin/hornet" ]; then
                        # Update HORNET
                        source $modules/getVersions
                        if [ "$nodeVersion" != "HORNET $latestHornet" ]; then
                            {
                                echo 0
                                sudo apt-get update > /dev/null 2>&1
                                echo 33
                                sudo apt-get -qq -y -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confnew install hornet > /dev/null 2>&1
                                echo 66
                                IFS=', ' read -r -a ARRAYhornetConfigs <<< "$hornetConfigs"
                                for hornetConfig in "${ARRAYhornetConfigs[@]}"
                                do
                                    if [ -f "$hornetDir/$hornetConfig.json.dpkg-dist" ]; then
                                        sudo cp -r $hornetDir/$hornetConfig.json.dpkg-dist $hornetDir/$hornetConfig.json > /dev/null 2>&1
                                        sudo rm -rf $hornetDir/$hornetConfig.json.dpkg* > /dev/null 2>&1
                                    fi
                                done
                                unset ARRAYhornetConfigs
                                unset hornetConfig                                
                                echo 100
                                sleep 0.5
                            } | whiptail --gauge "Please wait while Hornet is updated..." 6 65 0
                            newVersion="$(hornet -v)"
                            if [ "$version" != "$newVersion" ]; then
                                {
                                    # CALL MODULE CONFIGPARSER
                                    source $modules/hornet/configParser
                                    sudo systemctl restart hornet
                                } | whiptail --gauge "Please wait while parsing the configuration..." 6 65 0
                            fi
                            whiptail --title "Hornet Menu" --msgbox "Hornet successfully updated" 8 65
                        else
                            whiptail --title "Hornet Menu" --msgbox "Congratulations, you have already installed the latest version of Hornet!" 8 65
                        fi
                    else
                        whiptail --title "Hornet Installer" --msgbox "Sorry, but Hornet is not installed!" 8 65
                    fi
                ;;
                "2)")
                    source $modules/hornet/hornetInstaller
                ;;
                "3)")
                    {
                        echo 0
                        sleep 0.25
                        ( crontab -l | grep -v -F "$watchdogCronCmd" ) | crontab -
                        echo 15
                        sleep 0.25
                        ( crontab -l | grep -v -F "$dbPrunerCronCmd" ) | crontab -
                        echo 30
                        sleep 0.25
                        sudo systemctl stop hornet > /dev/null 2>&1
                        sudo systemctl disable hornet > /dev/null 2>&1
                        echo 45
                        sleep 0.25
                        #sudo apt -qq remove hornet -y > /dev/null 2>&1
                        sudo apt -qq purge hornet -y > /dev/null 2>&1
                        echo 60
                        sleep 0.25
                        sudo apt -qq autoremove -y > /dev/null 2>&1
                        echo 75
                        sudo systemctl daemon-reload > /dev/null 2>&1
                        echo 90
                        if [ "$ufw" = "true" ]; then
                            sudo ufw delete allow $gossipPort/tcp > /dev/null 2>&1
                            sudo ufw delete allow $autopeeringPort/udp > /dev/null 2>&1
                        fi
                        sudo rm -rf $hornetDir > /dev/null 2>&1
                        echo 100
                        sleep 0.25
                    } | whiptail --gauge "Please wait while Hornet will be removed..." 6 65 0
                    whiptail --title "Hornet Menu" --msgbox "Hornet successfully removed" 8 65
                ;;
            esac
        ;;
    esac
done
exitCode=0