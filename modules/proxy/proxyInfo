#!/bin/bash
source $swarmConfigs/proxy.cfg

source $proxyModules/proxyParser

if [ -f "/usr/sbin/nginx" ]; then
    proxyStatus=$(systemctl show -p ActiveState --value nginx)
    if [ ! -z "$proxyLandingDomain" ] && [ ! -z "$proxyLandingPort" ] && [ -d "/etc/letsencrypt/live/$proxyLandingDomain" ] && [ -f "/var/www/html/swarm-nodes/index.html" ]; then
        proxyLandingInfo="\n\nLanding page\nhttps://$proxyLandingUrl"
    fi

    hr="\n\n#############################################################"

    if [ ! -z "$proxyHornetUrl" ] && [ -d "/etc/letsencrypt/live/$proxyHornetDomain" ] && [ -f "/usr/bin/hornet" ]; then
        proxyHornetInfo="\n\nHornet (Dashboard/API)\nhttps://$proxyHornetUrl"
    fi
    if [ ! -z "$proxyBeeUrl" ] && [ -d "/etc/letsencrypt/live/$proxyBeeDomain" ] && [ -f "/usr/bin/bee" ]; then
        proxyBeeInfo="\n\nBee (Dashboard/API)\nhttps://$proxyBeeUrl"
    fi
    if [ ! -z "$proxyGoshimmerUrl" ] && [ -d "/etc/letsencrypt/live/$proxyGoshimmerDomain" ] && [ -f "/usr/bin/goshimmer" ]; then
        proxyGoshimmerInfo="\n\nGoShimmer (Dashboard/API)\nhttps://$proxyGoshimmerUrl"
    fi
    if [ ! -z "$proxyWaspDashboardUrl" ] && [ -d "/etc/letsencrypt/live/$proxyWaspDashboardDomain" ] && [ -f "/usr/bin/wasp" ]; then
        proxyWaspDashboardInfo="\n\nWASP (Dashboard)\nhttps://$proxyWaspDashboardUrl"
    fi
    if [ ! -z "$proxyWaspApiUrl" ] && [ -d "/etc/letsencrypt/live/$proxyWaspApiDomain" ] && [ -f "/usr/bin/wasp" ]; then
        proxyWaspApiInfo="\n\nWASP (API)\nhttps://$proxyWaspApiUrl"
    fi

    # OUTPUT
    whiptail --title "Proxy Info [v$version]" --msgbox "Webserver: ${proxyStatus}${proxyLandingInfo}${hr}${proxyHornetInfo}${proxyBeeInfo}${proxyGoshimmerInfo}${proxyWaspDashboardInfo}${proxyWaspApiInfo}" 27 65
else
    whiptail --title "Proxy Info [v$version]" --msgbox "Reverse proxy not installed!" 8 65
fi