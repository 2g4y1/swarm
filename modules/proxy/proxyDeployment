#!/bin/bash

# Check if letsencrypt is already installed on the node
if [ ! -d "/etc/letsencrypt" ]; then
    {
        echo 0
        if [ "$ufw" = "true" ]; then
            sudo ufw allow 80/tcp > /dev/null 2>&1
        fi
        echo 10
        sudo apt-get -qq install software-properties-common certbot python3-certbot-nginx -y > /dev/null 2>&1
        echo 20
        rm -rf /etc/nginx/sites-enabled/default /etc/nginx/sites-available/default
        sleep 0.1
        echo 30
        rm -rf /etc/nginx/sites-enabled/default /etc/nginx/sites-available/default
        sleep 0.1
        echo 50
        sleep 0.1
        sudo cat $templates/nginx_http.template > /etc/nginx/sites-enabled/default
        echo 60
        sleep 0.1
        sudo find /etc/nginx/sites-enabled/default -type f -exec sed -i 's/domain.tld/'$domain'/g' {} \;
        echo 70
        sleep 0.1
        sudo systemctl restart nginx
        echo 90
        if [ ! -f "/etc/nginx/nginx.conf" ]; then
            sudo apt-get -qq -o DPkg::options::=--force-confmiss --reinstall install nginx-common > /dev/null 2>&1
        fi
        sleep 0.1
        echo 100
        sleep 0.25
    } | whiptail --gauge "Please wait while the proxy will be installed..." 6 65 0
fi

# Check if a folder of the domain for letsencrypt already exist
if [ ! -d "/etc/letsencrypt/live/$domain" ]; then
    {
        echo 0
        if [ ! -f "/etc/nginx/nginx.conf" ]; then
            sudo apt-get -qq -o DPkg::options::=--force-confmiss --reinstall install nginx-common > /dev/null 2>&1
        fi
        nginxStatus="$(systemctl show -p ActiveState --value nginx)"
        if [ "$nginxStatus" != "active" ]; then
            sudo systemctl restart nginx
        fi
        echo 50
        sudo certbot --noninteractive --agree-tos --no-eff-email --nginx --no-redirect -d $domain -m $email > /dev/null 2>&1
        unset emailaddress
        echo 100
    } | whiptail --gauge "Requesting SSL certificate..." 6 65 0  
    # echo ""
    # read -p "Press any key to continue..."
    if [ ! -f "/etc/letsencrypt/live/$domain/fullchain.pem" ]; then
        whiptail --title "Proxy Menu" --msgbox "No SSL Certificate not found!" 8 65
    else
        whiptail --title "Proxy Menu" --msgbox "SSL certificate successfully issued!" 8 65
    fi
fi

# Check if the certificate for the domain already exist
if [ -f "/etc/letsencrypt/live/$domain/fullchain.pem" ]; then
    rm -rf /etc/nginx/sites-enabled/default /etc/nginx/sites-available/default
    {
    echo 0
    sleep 0.25
    sudo cat $templates/nginx_default.template > /etc/nginx/sites-enabled/default
    echo 20
    sleep 0.25
    sudo find /etc/nginx/nginx.conf -type f -exec sed -i 's/# server_tokens off;/server_tokens off;/g' {} \;
    sudo find /etc/nginx/nginx.conf -type f -exec sed -i 's/# server_names_hash_bucket_size 64;/server_names_hash_bucket_size 64;/g' {} \;
    echo 40
    sleep 0.25
    sudo find /etc/nginx/sites-enabled/default -type f -exec sed -i 's/domain.tld/'$domain'/g' {} \;
    sudo find /etc/nginx/sites-enabled/default -type f -exec sed -i 's/443/'$apiPort'/g' {} \;
    echo 60
    sleep 0.25
    sudo systemctl restart nginx
    echo 80
    if [ "$ufw" = "true" ]; then
        sudo ufw allow $apiPort/tcp > /dev/null 2>&1
    fi
    echo 100
    sleep 0.25
    } | whiptail --gauge "Please wait while SWARM deploying the config and restart the proxy..." 8 65 0
    whiptail --title "Proxy Menu" --msgbox "Node Informations:\n\nURL: https://$domain:$apiPort" 12 65
else
    whiptail --title "Proxy Menu" --msgbox "No SSL Certificate not found!!" 8 65
fi