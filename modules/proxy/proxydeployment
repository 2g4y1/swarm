#!/bin/bash

# Check if the nginx folder for the htpasswd exist
if [ ! -d "/etc/nginx" ] || [ ! -d "/etc/nginx/dash" ] || [ ! -d "/etc/nginx/api" ]; then
    if [ ! -d "/etc/nginx/dash" ]; then
        sudo mkdir -p /etc/nginx/dash
    fi
    if [ ! -d "/etc/nginx/api" ]; then
        sudo mkdir -p /etc/nginx/api
    fi
fi

# Check if the .htpasswd file for the dash already exist
if [ ! -f "/etc/nginx/dash/.htpasswd" ]; then
    sudo touch /etc/nginx/dash/.htpasswd
fi

# Check if the .htpasswd file for the api already exist
if [ ! -f "/etc/nginx/api/.htpasswd" ]; then
    sudo touch /etc/nginx/api/.htpasswd
fi

# Check if letsencrypt is already installed on the node
if [ ! -d "/etc/letsencrypt" ]; then
    sudo apt -qq install software-properties-common certbot python3-certbot-nginx -y > /dev/null 2>&1
    rm -rf /etc/nginx/sites-enabled/default /etc/nginx/sites-available/default
    sudo cp $templates/nginx_default.template /etc/nginx/sites-enabled/default
    sudo find /etc/nginx/sites-enabled/default -type f -exec sed -i 's/domain.tld/'$domain'/g' {} \;
    sudo systemctl restart nginx
    source $modules/proxy/adduserproxy
fi

# Check if a folder of the domain for letsencrypt already exist
if [ ! -d "/etc/letsencrypt/live/$domain" ]; then
    sudo certbot --nginx -d $domain
    if [ ! -f "/etc/letsencrypt/live/$domain/fullchain.pem" ]; then
        whiptail --title "Proxy Menu" --msgbox "Error! SSL Certificate not found!" 8 65
    else
        whiptail --title "Proxy Menu" --msgbox "SSL certificate successfully issued!" 8 65
    fi
fi

# Check if the certificate for the domain already exist
if [ -f "/etc/letsencrypt/live/$domain/fullchain.pem" ]; then
    rm -rf /etc/nginx/sites-enabled/default /etc/nginx/sites-available/default
    if [ "$apiprotection" = "true" ]; then
        {
        echo 0
        sleep 0.25
        sudo cp $templates/nginx_auth.template /etc/nginx/sites-enabled/default
        echo 20
        sleep 0.25
        sudo find /etc/nginx/sites-enabled/default -type f -exec sed -i 's/domain.tld/'$domain'/g' {} \;
        echo 40
        sleep 0.25
        sudo find /etc/nginx/sites-enabled/default -type f -exec sed -i 's/443/'$nodeport'/g' {} \;
        echo 60
        sleep 0.25
        sudo find /etc/nginx/sites-enabled/default -type f -exec sed -i 's/\#NGINX/''/g' {} \;
        echo 80
        sleep 0.25
        sudo systemctl restart nginx
        echo 100
        sleep 0.25
        } | whiptail --gauge "Please wait while SWARM deploying the config and restart the proxy..." 6 65 0
        whiptail --title "Proxy Menu" --msgbox "Node Informations:\n\nDashboard: https://$domain:$nodeport\nAPI: https://$domain:$nodeport/auth" 15 65
    else if [ "$apiprotection" = "false" ]; then
            {
            echo 0
            sleep 0.25
            sudo cp $templates/nginx_access.template /etc/nginx/sites-enabled/default
            echo 20
            sleep 0.25
            sudo find /etc/nginx/sites-enabled/default -type f -exec sed -i 's/domain.tld/'$domain'/g' {} \;
            echo 40
            sleep 0.25
            sudo find /etc/nginx/sites-enabled/default -type f -exec sed -i 's/443/'$nodeport'/g' {} \;
            echo 60
            sleep 0.25
            sudo find /etc/nginx/sites-enabled/default -type f -exec sed -i 's/\#NGINX/''/g' {} \;
            echo 80
            sleep 0.25
            sudo systemctl restart nginx
            echo 100
            sleep 0.25
            } | whiptail --gauge "Please wait while SWARM deploying the config and restart the proxy..." 6 65 0
            whiptail --title "Proxy Menu" --msgbox "Node Informations:\n\nDashboard: https://$domain:$nodeport\nAPI: https://$domain:$nodeport/access" 15 65
        else
            whiptail --title "Proxy Menu" --msgbox "SSL Protection is not correctly defined in proxy.cfg!" 8 65
        fi
    fi
fi
