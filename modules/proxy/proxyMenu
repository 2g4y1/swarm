#!/bin/bash
while [ $counter -lt 1 ]; do
    CHOICE=$(
        whiptail --title "Proxy Menu" --menu "\nChoose an option" 16 65 0 \
        "1)" "Proxy Info" \
        "2)" "Proxy Configuration" \
        "3)" "Proxy Debugging" \
        "4)" "Proxy Installer" 3>&2 2>&1 1>&3
    )

    exitStatus=$?
    if [ "$exitStatus" = "1" ]; then
        counter=1
    fi

    case $CHOICE in
        "1)")
            source $modules/proxy/proxyInfo
        ;;
        "2)")
            while [ $counter -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Proxy Menu" --menu "\nChoose an option" 12 65 0 \
                    "1)" "Set Domain" \
                    "2)" "API Port" 3>&2 2>&1 1>&3
                )

                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    counter=1
                fi

                case $CHOICE in
                    "1)")
                        source $configs/proxy.cfg
                        currentDomain=$domain
                        domain=$(whiptail --inputbox "\nSet your domain or your ddns name for you node" 10 65 $domain --title "Proxy - Domain" 3>&1 1>&2 2>&3)
                        if [ ! -z "$domain" ]; then
                            if [ "$currentDomain" != "$domain" ]; then
                                sudo sed -i 's/domain=.*/domain="'$domain'"/' $configs/proxy.cfg
                                whiptail --title "Proxy - Domain" --msgbox "Domain for proxy set to \"$domain\"" 8 65
                            else
                                whiptail --title "Proxy - Domain" --msgbox "No domain change detected" 8 65
                            fi
                        fi 
                    ;;
                    "2)")
                        source $config/proxy.cfg
                        currentApiPort=$apiPort
                        domain=$(whiptail --inputbox "\nSet your API port for you node" 10 65 $apiPort --title "Proxy - API" 3>&1 1>&2 2>&3)
                        if [ ! -z "$apiPort" ] && [ $apiPort -eq $apiPort ] 2>/dev/null; then
                            if [ "$currentApiPort" != "$apiPort" ]; then
                                ufw delete allow $currentApiPort/tcp > /dev/null 2>&1
                                ufw allow $apiPort > /dev/null 2>&1
                                sudo sed -i 's/apiPort=.*/apiPort='$apiPort'/' $configs/proxy.cfg
                                whiptail --title "Proxy - API" --msgbox "Your API port set to \"$apiPort\"" 8 65
                            fi
                        fi
                    ;;
                esac
            done
            counter=0
        ;;
        "3)")
            CHOICE=$(
                whiptail --title "Proxy Menu" --menu "\nChoose an option" 16 65 0 \
                "1)" "Show proxy status" \
                "2)" "Start/stop proxy" 3>&2 2>&1 1>&3
            )
            case $CHOICE in
                "1)")
                    proxyStatus="$(sudo systemctl status nginx)"
                    whiptail --title "Proxy Status" --msgbox "$proxyStatus" 15 65
                ;;
                "2)")
                    CHOICE=$(
                        whiptail --title "Proxy Menu" --menu "\nChoose your option" 16 65 0 \
                        "1)" "Restart Proxy" \
                        "2)" "Start Proxy" \
                        "3)" "Stop Proxy" 3>&2 2>&1 1>&3
                    )
                    case $CHOICE in
                        "1)")
                            {
                                echo 0
                                sleep 0.25
                                echo 66
                                sudo systemctl restart nginx
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while re-starting the proxy..." 6 65 0
                            whiptail --scrolltext --title "Proxy Menu" --msgbox "Proxy restarted successfully!" 8 65
                        ;;
                        "2)")
                            {
                                echo 0
                                sleep 0.25
                                echo 66
                                sudo systemctl start nginx
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while starting the proxy..." 6 65 0
                            whiptail --title "Proxy Menu" --msgbox "Proxy started successfully!" 8 65
                        ;;
                        "3)")
                            {
                                echo 0
                                sleep 0.25
                                echo 66
                                sudo systemctl stop nginx
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while stopping the proxy..." 6 65 0
                            whiptail --title "Proxy Menu" --msgbox "Proxy stopped successfully!" 8 65
                        ;;
                    esac
                ;;
            esac
        ;;
        "4)")
            CHOICE=$(
                whiptail --title "Proxy Menu" --menu "\nChoose an option" 16 65 0 \
                "1)" "Install/Deploy the proxy" \
                "2)" "Remove the proxy" \
                "3)" "Renew SSL certificate" \
                "4)" "Advanced Proxy" 3>&2 2>&1 1>&3
            )
            case $CHOICE in
                "1)")
                    if [ "$domain" = "myhornetnode.domain.tld" ]; then
                        whiptail --title "Proxy Menu" --msgbox "Please set your domain first before continuing!" 8 65
                    else
                        if [ ! -f "/etc/letsencrypt/live/$domain/fullchain.pem" ]; then
                            # Run the nginx module for the proxy
                            email=$(whiptail --inputbox "\nPlease enter your e-mail address so that a certificate can be issued" 10 65 --title "Proxy - Certificate" 3>&1 1>&2 2>&3)
                            if [ ! -z "$email" ]; then
                                source $modules/proxy/proxyDeployment
                            else
                                whiptail --title "Proxy - Deployment" --msgbox "No valid email address entered!" 8 65
                            fi
                        else
                            source $modules/proxy/proxyDeployment
                        fi
                    fi
                ;;
                "2)")
                    {
                        echo 0
                        if [ "$ufw" = "true" ]; then
                            sudo ufw delete allow 80/tcp
                            sudo ufw delete allow $apiPort/tcp
                        fi
                        echo 20
                        sudo apt -qq purge software-properties-common certbot python3-certbot-nginx -y > /dev/null 2>&1
                        echo 40
                        sudo apt -qq autoremove -y > /dev/null 2>&1
                        echo 60
                        if [ -d "/etc/nginx" ]; then
                            sudo rm -rf /etc/nginx > /dev/null 2>&1
                        fi
                        echo 100
                        sleep 0.25
                    } | whiptail --gauge "Please wait while removing the proxy..." 6 65 0
                    whiptail --title "Proxy Menu" --msgbox "Proxy removed successfully!" 8 65
                ;;
                "3)")
                    # Manual renew certificate if installed
                    if [ -f "/etc/letsencrypt/live/$domain/fullchain.pem" ]; then
                        sudo certbot renew
                    else
                        whiptail --title "Proxy Menu" --msgbox "Error! No SSL Certificate installed!" 8 65
                    fi
                ;;
                "4)")
                    inputCode=$(whiptail --inputbox "\nPlease enter the code:" 10 65 --title "Proxy Menu" 3>&1 1>&2 2>&3)
                    if [ -f "/etc/letsencrypt/live/$domain/fullchain.pem" ]; then
                        source $configs/proxy.cfg
                        if [ "$inputCode" = "mainnet" ]; then
                            {
                                echo 0
                                echo 20
                                sleep 0.25
                                sudo wget -q -O /etc/nginx/tb-balancer.conf https://tanglebay.com/assets/tb-balancer.conf
                                echo 40
                                sleep 0.25
                                sudo wget -q -O /etc/nginx/sites-enabled/tb-pool https://tanglebay.com/assets/mainnet-pool.conf
                                if [ -f "/etc/nginx/sites-enabled/tb-pool" ]; then
                                    sudo find /etc/nginx/sites-enabled/tb-pool -type f -exec sed -i 's/domain.tld/'$domain'/g' {} \;
                                fi
                                echo 60
                                sudo systemctl reload nginx
                                sleep 0.25
                                echo 80
                                sleep 0.25
                                sudo ufw allow 4430/tcp
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Deploying current mainnet pool configuration..." 6 65 0
                            whiptail --title "Proxy Menu" --msgbox "Mainnet pool configuration successfully set up!" 8 65        
                        else
                            if [ "$inputCode" = "testnet" ]; then
                            {
                                echo 0
                                echo 20
                                sleep 0.25
                                sudo wget -q -O /etc/nginx/tb-balancer.conf https://tanglebay.com/assets/tb-balancer.conf
                                echo 40
                                sleep 0.25
                                sudo wget -q -O /etc/nginx/sites-enabled/tb-pool https://tanglebay.com/assets/testnet-pool.conf
                                if [ -f "/etc/nginx/sites-enabled/tb-pool" ]; then
                                    sudo find /etc/nginx/sites-enabled/tb-pool -type f -exec sed -i 's/domain.tld/'$domain'/g' {} \;
                                fi
                                echo 60
                                sudo systemctl reload nginx
                                sleep 0.25
                                echo 80
                                sleep 0.25
                                sudo ufw allow 4432/tcp
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Deploying current testnet pool configuration..." 6 65 0
                            whiptail --title "Proxy Menu" --msgbox "Testnet pool configuration successfully set up!" 8 65 
                            else
                                whiptail --title "Proxy Menu" --msgbox "Error - Try again!" 8 65
                            fi
                        fi
                    else
                        whiptail --title "Proxy Menu" --msgbox "Error - Try again later!" 8 65
                    fi
                ;;
            esac
        ;;
    esac
done
counter=0