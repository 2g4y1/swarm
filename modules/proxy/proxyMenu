#!/bin/bash
while [ $exitCode -lt 1 ]; do
    clear
    CHOICE=$(
        whiptail --title "Proxy Menu" --menu "\nChoose an option" 16 65 0 \
        "1)" "Proxy Info" \
        "2)" "Proxy Configuration" \
        "3)" "Proxy Debugging" \
        "4)" "Proxy Installer" 3>&2 2>&1 1>&3
    )

    exitStatus=$?
    if [ "$exitStatus" = "1" ]; then
        exitCode=1
    fi

    case $CHOICE in
        "1)")
            source $proxyModules/proxyInfo
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                clear
                CHOICE=$(
                    whiptail --title "Proxy Menu" --menu "\nChoose an option" 16 65 0 \
                    "1)" "Hornet proxy settings" \
                    "2)" "Bee proxy settings" \
                    "3)" "GoShimmer proxy settings" \
                    "4)" "WASP proxy settings" 3>&2 2>&1 1>&3
                )

                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/proxy.cfg
                            clear
                            CHOICE=$(
                                whiptail --title "Proxy - Hornet Settings" --menu "\nHornet Domain: $proxyHornetDomain\nHornet Port: $proxyHornetPort\n\nChoose an option" 17 65 0 \
                                "1)" "Hornet domain" \
                                "2)" "Hornet port" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyHornetDomain=$proxyHornetDomain
                                    proxyHornetDomain=$(whiptail --inputbox "\nSet your domain or your ddns name for Hornet" 10 65 --title "Proxy - Hornet Domain" 3>&1 1>&2 2>&3)
                                    exitStatus=$?
                                    if [ $exitStatus != 1 ]; then
                                        if [ "$currentProxyHornetDomain" != "$proxyHornetDomain" ]; then
                                            sudo sed -i 's/^proxyHornetDomain=.*/proxyHornetDomain="'$proxyHornetDomain'"/' $swarmConfigs/proxy.cfg
                                            whiptail --title "Proxy - Hornet Domain" --msgbox "Domain for proxy set to \"$proxyHornetDomain\"" 8 65
                                        else
                                            whiptail --title "Proxy - Hornet Domain" --msgbox "No Hornet domain change detected" 8 65
                                        fi
                                    fi
                                ;;
                                "2)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyHornetPort=$proxyHornetPort
                                    proxyHornetPort=$(whiptail --inputbox "\nSet a port for Hornet" 10 65 $proxyHornetPort --title "Proxy - Hornet Port" 3>&1 1>&2 2>&3)
                                    exitStatus=$?
                                    if [ $exitStatus != 1 ]; then
                                        if [ ! -z "$proxyHornetPort" ] && [ $proxyHornetPort -eq $proxyHornetPort ] 2>/dev/null; then
                                            if [ "$currentProxyHornetPort" != "$proxyHornetPort" ]; then
                                                if [ "$ufw" = "true" ]; then
                                                    if [ "$currentProxyHornetPort" != "$proxyBeePort" ] && [ "$currentProxyHornetPort" != "$proxyGoshimmerPort" ] && [ "$currentProxyHornetPort" != "$proxyWaspPort" ]; then
                                                        ufw delete allow $currentProxyHornetPort/tcp > /dev/null 2>&1
                                                    fi
                                                fi
                                                sudo sed -i 's/^proxyHornetPort=.*/proxyHornetPort='$proxyHornetPort'/' $swarmConfigs/proxy.cfg
                                                whiptail --title "Proxy - Hornet Port" --msgbox "The Hornet port was set to \"$proxyHornetPort\"" 8 65
                                            fi
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/proxy.cfg
                            clear
                            CHOICE=$(
                                whiptail --title "Proxy - Bee Settings" --menu "\nBee Domain: $proxyBeeDomain\nBee Port: $proxyBeePort\n\nChoose an option" 17 65 0 \
                                "1)" "Bee domain" \
                                "2)" "Bee port" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyBeeDomain=$proxyBeeDomain
                                    proxyBeeDomain=$(whiptail --inputbox "\nSet your domain or your ddns name for Bee" 10 65 --title "Proxy - Bee Domain" 3>&1 1>&2 2>&3)
                                    exitStatus=$?
                                    if [ $exitStatus != 1 ]; then
                                        if [ "$currentProxyBeeDomain" != "$proxyBeeDomain" ]; then
                                            sudo sed -i 's/^proxyBeeDomain=.*/proxyBeeDomain="'$proxyBeeDomain'"/' $swarmConfigs/proxy.cfg
                                            whiptail --title "Proxy - Bee Domain" --msgbox "Domain for proxy set to \"$proxyBeeDomain\"" 8 65
                                        else
                                            whiptail --title "Proxy - Bee Domain" --msgbox "No Bee domain change detected" 8 65
                                        fi
                                    fi
                                ;;
                                "2)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyBeePort=$proxyBeePort
                                    proxyBeePort=$(whiptail --inputbox "\nSet a port for Bee" 10 65 $proxyBeePort --title "Proxy - Bee Port" 3>&1 1>&2 2>&3)
                                    exitStatus=$?
                                    if [ $exitStatus != 1 ]; then
                                        if [ ! -z "$proxyBeePort" ] && [ $proxyBeePort -eq $proxyBeePort ] 2>/dev/null; then
                                            if [ "$currentProxyBeePort" != "$proxyBeePort" ]; then
                                                if [ "$ufw" = "true" ]; then
                                                    if [ "$currentProxyBeePort" != "$proxyHornetPort" ] && [ "$currentProxyBeePort" != "$proxyGoshimmerPort" ] && [ "$currentProxyBeePort" != "$proxyWaspPort" ]; then
                                                        ufw delete allow $currentProxyBeePort/tcp > /dev/null 2>&1
                                                    fi
                                                fi
                                                sudo sed -i 's/^proxyBeePort=.*/proxyBeePort='$proxyBeePort'/' $swarmConfigs/proxy.cfg
                                                whiptail --title "Proxy - Bee Port" --msgbox "The Bee port was set to \"$proxyBeePort\"" 8 65
                                            fi
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "3)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/proxy.cfg
                            clear
                            CHOICE=$(
                                whiptail --title "Proxy - GoShimmer Settings" --menu "\nGoShimmer Domain: $proxyGoshimmerDomain\nGoShimmer Port: $proxyGoshimmerPort\n\nChoose an option" 17 65 0 \
                                "1)" "GoShimmer domain" \
                                "2)" "GoShimmer port" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyGoshimmerDomain=$proxyGoshimmerDomain
                                    proxyGoshimmerDomain=$(whiptail --inputbox "\nSet your domain or your ddns name for GoShimmer" 10 65 --title "Proxy - GoShimmer Domain" 3>&1 1>&2 2>&3)
                                    exitStatus=$?
                                    if [ $exitStatus != 1 ]; then
                                        if [ "$currentProxyGoshimmerDomain" != "$proxyGoshimmerDomain" ]; then
                                            sudo sed -i 's/^proxyGoshimmerDomain=.*/proxyGoshimmerDomain="'$proxyGoshimmerDomain'"/' $swarmConfigs/proxy.cfg
                                            whiptail --title "Proxy - GoShimmer Domain" --msgbox "Domain for proxy set to \"$proxyGoshimmerDomain\"" 8 65
                                        else
                                            whiptail --title "Proxy - GoShimmer Domain" --msgbox "No GoShimmer domain change detected" 8 65
                                        fi
                                    fi
                                ;;
                                "2)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyGoshimmerPort=$proxyGoshimmerPort
                                    proxyGoshimmerPort=$(whiptail --inputbox "\nSet a port for GoShimmer" 10 65 $proxyGoshimmerPort --title "Proxy - GoShimmer Port" 3>&1 1>&2 2>&3)
                                    exitStatus=$?
                                    if [ $exitStatus != 1 ]; then
                                        if [ ! -z "$proxyGoshimmerPort" ] && [ $proxyGoshimmerPort -eq $proxyGoshimmerPort ] 2>/dev/null; then
                                            if [ "$currentProxyGoshimmerPort" != "$proxyGoshimmerPort" ]; then
                                                if [ "$ufw" = "true" ]; then
                                                    if [ "$currentProxyGoshimmerPort" != "$proxyHornetPort" ] && [ "$currentProxyGoshimmerPort" != "$proxyBeePort" ] && [ "$currentProxyGoshimmerPort" != "$proxyWaspPort" ]; then
                                                        ufw delete allow $currentProxyGoshimmerPort/tcp > /dev/null 2>&1
                                                    fi
                                                fi
                                                sudo sed -i 's/^proxyGoshimmerPort=.*/proxyGoshimmerPort='$proxyGoshimmerPort'/' $swarmConfigs/proxy.cfg
                                                whiptail --title "Proxy - GoShimmer Port" --msgbox "The GoShimmer port was set to \"$proxyGoshimmerPort\"" 8 65
                                            fi
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "4)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/proxy.cfg
                            clear
                            CHOICE=$(
                                whiptail --title "Proxy - WASP Settings" --menu "\nWASP Dashboard: \"$proxyWaspDashboardDomain:$proxyWaspDashboardPort\"\nWASP API: \"$proxyWaspApiDomain:$proxyWaspApiPort\"\n\nChoose an option" 19 65 0 \
                                "1)" "WASP dashboard domain" \
                                "2)" "WASP dashboard port" \
                                "3)" "WASP API domain" \
                                "4)" "WASP API port" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyWaspDashboardDomain=$proxyWaspDashboardDomain
                                    proxyWaspDashboardDomain=$(whiptail --inputbox "\nSet your domain or your ddns name for the WASP dashboard" 10 65 $currentProxyWaspDashboardDomain --title "Proxy - WASP Dashboard" 3>&1 1>&2 2>&3)
                                    if [ "$currentProxyWaspDashboardDomain" != "$proxyWaspDashboardDomain" ]; then
                                        sudo sed -i 's/^proxyWaspDashboardDomain=.*/proxyWaspDashboardDomain="'$proxyWaspDashboardDomain'"/' $swarmConfigs/proxy.cfg
                                        whiptail --title "Proxy - WASP Dashboard" --msgbox "Dashboard domain for proxy set to \"$proxyWaspDashboardDomain\"" 8 65
                                    else
                                        whiptail --title "Proxy - WASP Dashboard" --msgbox "No WASP dashboard domain change detected" 8 65
                                    fi
                                ;;
                                "2)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyWaspDashboardPort=$proxyWaspDashboardPort
                                    proxyWaspDashboardPort=$(whiptail --inputbox "\nSet a port for WASP dashboard" 10 65 $proxyWaspDashboardPort --title "Proxy - WASP Dashboard" 3>&1 1>&2 2>&3)
                                    if [ ! -z "$proxyWaspDashboardPort" ] && [ $proxyWaspDashboardPort -eq $proxyWaspDashboardPort ] 2>/dev/null; then
                                        if [ "$currentProxyWaspDashboardPort" != "$proxyWaspDashboardPort" ]; then
                                            if [ "$ufw" = "true" ]; then
                                                if [ "$currentProxyWaspDashboardPort" != "$proxyHornetPort" ] && [ "$currentProxyWaspDashboardPort" != "$proxyBeePort" ] && [ "$currentProxyWaspDashboardPort" != "$proxyGoshimmerPort" ] && [ "$currentProxyWaspDashboardPort" != "$proxyWaspApiPort" ]; then
                                                    ufw delete allow $currentProxyWaspDashboardPort/tcp > /dev/null 2>&1
                                                fi
                                            fi
                                            sudo sed -i 's/^proxyWaspDashboardPort=.*/proxyWaspDashboardPort='$proxyWaspDashboardPort'/' $swarmConfigs/proxy.cfg
                                            whiptail --title "Proxy - WASP Dashboard" --msgbox "The WASP dashboard port was set to \"$proxyWaspDashboardPort\"" 8 65
                                        fi
                                    fi
                                ;;
                                "3)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyWaspApiDomain=$proxyWaspApiDomain
                                    proxyWaspApiDomain=$(whiptail --inputbox "\nSet your domain or your ddns name for WASP API" 10 65 $currentProxyWaspApiDomain --title "Proxy - WASP API" 3>&1 1>&2 2>&3)
                                    if [ "$currentProxyWaspApiDomain" != "$proxyWaspApiDomain" ]; then
                                        sudo sed -i 's/^proxyWaspApiDomain=.*/proxyWaspApiDomain="'$proxyWaspApiDomain'"/' $swarmConfigs/proxy.cfg
                                        whiptail --title "Proxy - WASP API" --msgbox "WASP API domain for proxy set to \"$proxyWaspApiDomain\"" 8 65
                                    else
                                        whiptail --title "Proxy - WASP API" --msgbox "No WASP API domain change detected" 8 65
                                    fi
                                ;;
                                "4)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyWaspApiPort=$proxyWaspApiPort
                                    proxyWaspApiPort=$(whiptail --inputbox "\nSet a port for the WASP API" 10 65 $proxyWaspApiPort --title "Proxy - WASP API" 3>&1 1>&2 2>&3)
                                    if [ ! -z "$proxyWaspApiPort" ] && [ $proxyWaspApiPort -eq $proxyWaspApiPort ] 2>/dev/null; then
                                        if [ "$currentProxyWaspApiPort" != "$proxyWaspApiPort" ]; then
                                            if [ "$ufw" = "true" ]; then
                                                if [ "$currentProxyWaspApiPort" != "$proxyHornetPort" ] && [ "$currentProxyWaspApiPort" != "$proxyBeePort" ] && [ "$currentProxyWaspApiPort" != "$proxyGoshimmerPort" ] && [ "$currentProxyWaspApiPort" != "$proxyWaspDashboardPort" ]; then
                                                    ufw delete allow $currentProxyWaspApiPort/tcp > /dev/null 2>&1
                                                fi
                                            fi
                                            sudo sed -i 's/^proxyWaspApiPort=.*/proxyWaspApiPort='$proxyWaspApiPort'/' $swarmConfigs/proxy.cfg
                                            whiptail --title "Proxy - WASP API" --msgbox "The WASP API port was set to \"$proxyWaspApiPort\"" 8 65
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            CHOICE=$(
                whiptail --title "Proxy Menu" --menu "\nChoose an option" 16 65 0 \
                "1)" "Show proxy status" \
                "2)" "Start/stop proxy" 3>&2 2>&1 1>&3
            )
            case $CHOICE in
                "1)")
                    proxyStatus="$(sudo systemctl status nginx)"
                    whiptail --title "Proxy Status" --msgbox "$proxyStatus" 15 65
                ;;
                "2)")
                    CHOICE=$(
                        whiptail --title "Proxy Menu" --menu "\nChoose your option" 16 65 0 \
                        "1)" "Restart Proxy" \
                        "2)" "Start Proxy" \
                        "3)" "Stop Proxy" 3>&2 2>&1 1>&3
                    )
                    case $CHOICE in
                        "1)")
                            {
                                echo 0
                                sleep 0.25
                                echo 66
                                sudo systemctl restart nginx
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while re-starting the proxy..." 6 65 0
                            whiptail --scrolltext --title "Proxy Menu" --msgbox "Proxy restarted successfully!" 8 65
                        ;;
                        "2)")
                            {
                                echo 0
                                sleep 0.25
                                echo 66
                                sudo systemctl start nginx
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while starting the proxy..." 6 65 0
                            whiptail --title "Proxy Menu" --msgbox "Proxy started successfully!" 8 65
                        ;;
                        "3)")
                            {
                                echo 0
                                sleep 0.25
                                echo 66
                                sudo systemctl stop nginx
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while stopping the proxy..." 6 65 0
                            whiptail --title "Proxy Menu" --msgbox "Proxy stopped successfully!" 8 65
                        ;;
                    esac
                ;;
            esac
        ;;
        "4)")
            CHOICE=$(
                whiptail --title "Proxy Menu" --menu "\nChoose an option" 16 65 0 \
                "1)" "Install/Deploy the proxy" \
                "2)" "Remove the proxy" \
                "3)" "Renew SSL certificate" 3>&2 2>&1 1>&3
            )
            case $CHOICE in
                "1)")
                    if [ -f "/usr/bin/hornet" ] || [ -f "/usr/bin/bee" ] || [ -f "/usr/bin/goshimmer" ] || [ -f "/usr/bin/wasp" ]; then
                        source $swarmConfigs/proxy.cfg
                        if (whiptail --title "Proxy - Deployment" --yesno --defaultno "Before deploying the proxy, please make sure that the domain and port are set for all nodes to be installed. If you use one domain for multiple nodes, please use different ports.\n\n\nAre you sure you want to continue?" 16 65); then
                            proxyCertReq=true
                            source $proxyModules/proxyDeployment
                            clear
                        fi
                    else
                        whiptail --title "Proxy - Deployment" --msgbox "No node software found on the system, please install a node first before you can install the proxy." 8 65
                    fi
                ;;
                "2)")
                    if (whiptail --title "Proxy - Removal" --yesno --defaultno "Do you really want to remove the proxy?" 8 65); then
                        {
                            echo 0
                            if [ "$ufw" = "true" ]; then
                                sudo ufw delete allow 80/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyHornetPort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyBeePort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyGoshimmerPort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyWaspDashboardPort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyWaspApiPort/tcp > /dev/null 2>&1
                            fi
                            echo 20
                            sudo apt -qq purge software-properties-common certbot python3-certbot-nginx nginx* -y > /dev/null 2>&1
                            echo 40
                            sudo apt -qq autoremove -y > /dev/null 2>&1
                            echo 60
                            if [ -d "/etc/nginx" ]; then
                                sudo rm -rf /etc/nginx > /dev/null 2>&1
                            fi
                            if [ -d "/etc/letsencrypt" ]; then
                                sudo rm -rf /etc/letsencrypt > /dev/null 2>&1
                            fi
                            sudo sed -i 's/^proxyHornetDomain=.*/proxyHornetDomain=""/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyBeeDomain=.*/proxyBeeDomain=""/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyGoshimmerDomain=.*/proxyGoshimmerDomain=""/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyHornetPort=.*/proxyHornetPort=/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyBeePort=.*/proxyBeePort=/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyGoshimmerPort=.*/proxyGoshimmerPort=/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyWaspDashboardPort=.*/proxyWaspDashboardPort=/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyWaspApiPort=.*/proxyWaspApiPort=/' $swarmConfigs/proxy.cfg
                            echo 100
                            sleep 0.25
                        } | whiptail --gauge "Please wait while removing the proxy..." 6 65 0
                        whiptail --title "Proxy - Removal" --msgbox "Proxy removed successfully!" 8 65
                    fi
                ;;
                "3)")
                    # Manual renew certificate if installed
                    if [ -f "/etc/letsencrypt/live/$proxyHornetDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyBeeDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyGoshimmerDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyWaspDashboardDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyWaspApiDomain/fullchain.pem" ]; then
                        sudo certbot renew
                    else
                        whiptail --title "Proxy Menu" --msgbox "Error! No SSL Certificate installed!" 8 65
                    fi
                ;;
            esac
        ;;
    esac
done
exitCode=0