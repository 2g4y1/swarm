#!/bin/bash
while [ $exitCode -lt 1 ]; do
    clear
    CHOICE=$(
        whiptail --title "Proxy Menu" --menu "\nChoose an option" 16 65 0 \
        "1)" "Proxy Info" \
        "2)" "Proxy Configuration" \
        "3)" "Proxy Debugging" \
        "4)" "Proxy Installer" 3>&2 2>&1 1>&3
    )

    exitStatus=$?
    if [ "$exitStatus" = "1" ]; then
        exitCode=1
    fi

    case $CHOICE in
        "1)")
            source $proxyModules/proxyInfo
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                clear
                CHOICE=$(
                    whiptail --title "Proxy Menu" --menu "\nChoose an option" 16 65 0 \
                    "1)" "Landing page settings" \
                    "2)" "Hornet proxy settings" \
                    "3)" "Bee proxy settings" \
                    "4)" "GoShimmer proxy settings" \
                    "5)" "WASP proxy settings" 3>&2 2>&1 1>&3
                )

                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        source $swarmConfigs/proxy.cfg
                        currentProxyLandingUrl="$proxyLandingDomain:$proxyLandingPort"
                        proxyLandingUrl=$(whiptail --inputbox "\nSet your domain and port for the landing page" 10 65 $proxyLandingUrl --title "Proxy - Landing" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ]; then
                            if [ "$currentProxyLandingUrl" != "$proxyLandingUrl" ] && [ ! -z "$proxyLandingUrl" ]; then
                                proxyLandingDomain=$(echo $proxyLandingUrl | sed 's/:.*//')
                                proxyLandingPort=$(echo $proxyLandingUrl | sed 's/.*://')
                                sudo sed -i 's/^proxyLandingDomain=.*/proxyLandingDomain="'$proxyLandingDomain'"/' $swarmConfigs/proxy.cfg
                                sudo sed -i 's/^proxyLandingPort=.*/proxyLandingPort='$proxyLandingPort'/' $swarmConfigs/proxy.cfg
                                whiptail --title "Proxy - Landing" --msgbox "URL for landing proxy set to \"$proxyLandingUrl\"" 8 65
                            else
                                whiptail --title "Proxy - Landing" --msgbox "No landing url change detected" 8 65
                            fi
                        fi
                    ;;
                    "2)")
                        source $swarmConfigs/proxy.cfg
                        currentProxyHornetUrl="$proxyHornetDomain:$proxyHornetPort"
                        proxyHornetUrl=$(whiptail --inputbox "\nSet your domain and port for Hornet" 10 65 $proxyHornetUrl --title "Proxy - Hornet" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ]; then
                            if [ "$currentProxyHornetUrl" != "$proxyHornetUrl" ] && [ ! -z "$proxyHornetUrl" ]; then
                                proxyHornetDomain=$(echo $proxyHornetUrl | sed 's/:.*//')
                                proxyHornetPort=$(echo $proxyHornetUrl | sed 's/.*://')
                                sudo sed -i 's/^proxyHornetDomain=.*/proxyHornetDomain="'$proxyHornetDomain'"/' $swarmConfigs/proxy.cfg
                                sudo sed -i 's/^proxyHornetPort=.*/proxyHornetPort='$proxyHornetPort'/' $swarmConfigs/proxy.cfg
                                whiptail --title "Proxy - Hornet" --msgbox "URL for Hornet proxy set to \"$proxyHornetUrl\"" 8 65
                            else
                                whiptail --title "Proxy - Hornet" --msgbox "No Hornet url change detected" 8 65
                            fi
                        fi
                    ;;
                    "3)")
                        source $swarmConfigs/proxy.cfg
                        currentProxyBeeUrl="$proxyBeeDomain:$proxyBeePort"
                        proxyBeeUrl=$(whiptail --inputbox "\nSet your domain and port for Bee" 10 65 $proxyBeeUrl --title "Proxy - Bee" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ]; then
                            if [ "$currentProxyBeeUrl" != "$proxyBeeUrl" ] && [ ! -z "$proxyBeeUrl" ]; then
                                proxyBeeDomain=$(echo $proxyBeeUrl | sed 's/:.*//')
                                proxyBeePort=$(echo $proxyBeeUrl | sed 's/.*://')
                                sudo sed -i 's/^proxyBeeDomain=.*/proxyBeeDomain="'$proxyBeeDomain'"/' $swarmConfigs/proxy.cfg
                                sudo sed -i 's/^proxyBeePort=.*/proxyBeePort='$proxyBeePort'/' $swarmConfigs/proxy.cfg
                                whiptail --title "Proxy - Bee" --msgbox "URL for Bee proxy set to \"$proxyBeeUrl\"" 8 65
                            else
                                whiptail --title "Proxy - Bee" --msgbox "No Bee url change detected" 8 65
                            fi
                        fi
                    ;;
                    "4)")
                        source $swarmConfigs/proxy.cfg
                        currentProxyGoshimmerUrl="$proxyGoshimmerDomain:$proxyGoshimmerPort"
                        proxyGoshimmerUrl=$(whiptail --inputbox "\nSet your domain and port for Goshimmer" 10 65 $proxyGoshimmerUrl --title "Proxy - Goshimmer" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ]; then
                            if [ "$currentProxyGoshimmerUrl" != "$proxyGoshimmerUrl" ] && [ ! -z "$proxyGoshimmerUrl" ]; then
                                proxyGoshimmerDomain=$(echo $proxyGoshimmerUrl | sed 's/:.*//')
                                proxyGoshimmerPort=$(echo $proxyGoshimmerUrl | sed 's/.*://')
                                sudo sed -i 's/^proxyGoshimmerDomain=.*/proxyGoshimmerDomain="'$proxyGoshimmerDomain'"/' $swarmConfigs/proxy.cfg
                                sudo sed -i 's/^proxyGoshimmerPort=.*/proxyGoshimmerPort='$proxyGoshimmerPort'/' $swarmConfigs/proxy.cfg
                                whiptail --title "Proxy - Goshimmer" --msgbox "URL for Goshimmer proxy set to \"$proxyGoshimmerUrl\"" 8 65
                            else
                                whiptail --title "Proxy - Goshimmer" --msgbox "No Goshimmer url change detected" 8 65
                            fi
                        fi
                    ;;
                    "5)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/proxy.cfg
                            clear
                            CHOICE=$(
                                whiptail --title "Proxy - WASP Settings" --menu "\nWASP Dashboard: \"$proxyWaspDashboardDomain:$proxyWaspDashboardPort\"\nWASP API: \"$proxyWaspApiDomain:$proxyWaspApiPort\"\n\nChoose an option" 16 65 0 \
                                "1)" "WASP Dashboard" \
                                "2)" "WASP API" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyWaspDashboardUrl="$proxyWaspDashboardDomain:$proxyWaspDashboardPort"
                                    proxyWaspDashboardUrl=$(whiptail --inputbox "\nSet your domain and port for the WASP dashboard" 10 65 $proxyWaspDashboardUrl --title "Proxy - WASP Dashboard" 3>&1 1>&2 2>&3)
                                    exitStatus=$?
                                    if [ "$exitStatus" != "1" ]; then
                                        if [ "$currentProxyWaspDashboardUrl" != "$proxyWaspDashboardUrl" ] && [ ! -z "$proxyWaspDashboardUrl" ]; then
                                            proxyWaspDashboardDomain=$(echo $proxyWaspDashboardUrl | sed 's/:.*//')
                                            proxyWaspDashboardPort=$(echo $proxyWaspDashboardUrl | sed 's/.*://')
                                            sudo sed -i 's/^proxyWaspDashboardDomain=.*/proxyWaspDashboardDomain="'$proxyWaspDashboardDomain'"/' $swarmConfigs/proxy.cfg
                                            sudo sed -i 's/^proxyWaspDashboardPort=.*/proxyWaspDashboardPort='$proxyWaspDashboardPort'/' $swarmConfigs/proxy.cfg
                                            whiptail --title "Proxy - WASP Dashboard" --msgbox "URL for WASP dashboard proxy set to \"$proxyWaspDashboardUrl\"" 8 65
                                        else
                                            whiptail --title "Proxy - WASP Dashboard" --msgbox "No WASP dashboard url change detected" 8 65
                                        fi
                                    fi
                                ;;
                                "2)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyWaspApiUrl="$proxyWaspApiDomain:$proxyWaspApiPort"
                                    proxyWaspApiUrl=$(whiptail --inputbox "\nSet your domain and port for the WASP API" 10 65 $proxyWaspApiUrl --title "Proxy - WASP API" 3>&1 1>&2 2>&3)
                                    exitStatus=$?
                                    if [ "$exitStatus" != "1" ]; then
                                        if [ "$currentProxyWaspApiUrl" != "$proxyWaspApiUrl" ] && [ ! -z "$proxyWaspApiUrl" ]; then
                                            proxyWaspApiDomain=$(echo $proxyWaspApiUrl | sed 's/:.*//')
                                            proxyWaspApiPort=$(echo $proxyWaspApiUrl | sed 's/.*://')
                                            sudo sed -i 's/^proxyWaspApiDomain=.*/proxyWaspApiDomain="'$proxyWaspApiDomain'"/' $swarmConfigs/proxy.cfg
                                            sudo sed -i 's/^proxyWaspApiPort=.*/proxyWaspApiPort='$proxyWaspApiPort'/' $swarmConfigs/proxy.cfg
                                            whiptail --title "Proxy - WASP API" --msgbox "URL for WASP API proxy set to \"$proxyWaspApiUrl\"" 8 65
                                        else
                                            whiptail --title "Proxy - WASP API" --msgbox "No WASP API url change detected" 8 65
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            CHOICE=$(
                whiptail --title "Proxy Menu" --menu "\nChoose an option" 16 65 0 \
                "1)" "Show proxy status" \
                "2)" "Start/stop proxy" 3>&2 2>&1 1>&3
            )
            case $CHOICE in
                "1)")
                    proxyStatus="$(sudo systemctl status nginx)"
                    whiptail --title "Proxy Status" --msgbox "$proxyStatus" 15 65
                ;;
                "2)")
                    CHOICE=$(
                        whiptail --title "Proxy Menu" --menu "\nChoose your option" 16 65 0 \
                        "1)" "Restart Proxy" \
                        "2)" "Start Proxy" \
                        "3)" "Stop Proxy" 3>&2 2>&1 1>&3
                    )
                    case $CHOICE in
                        "1)")
                            {
                                echo 0
                                sleep 0.25
                                echo 66
                                sudo systemctl restart nginx
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while re-starting the proxy..." 6 65 0
                            whiptail --scrolltext --title "Proxy Menu" --msgbox "Proxy restarted successfully!" 8 65
                        ;;
                        "2)")
                            {
                                echo 0
                                sleep 0.25
                                echo 66
                                sudo systemctl start nginx
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while starting the proxy..." 6 65 0
                            whiptail --title "Proxy Menu" --msgbox "Proxy started successfully!" 8 65
                        ;;
                        "3)")
                            {
                                echo 0
                                sleep 0.25
                                echo 66
                                sudo systemctl stop nginx
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while stopping the proxy..." 6 65 0
                            whiptail --title "Proxy Menu" --msgbox "Proxy stopped successfully!" 8 65
                        ;;
                    esac
                ;;
            esac
        ;;
        "4)")
            CHOICE=$(
                whiptail --title "Proxy Menu" --menu "\nChoose an option" 18 65 0 \
                "1)" "Install/Deploy the proxy" \
                "2)" "Remove the proxy" \
                "3)" "Renew SSL certificate" 3>&2 2>&1 1>&3
            )
            case $CHOICE in
                "1)")
                    if [ -f "/usr/bin/hornet" ] || [ -f "/usr/bin/bee" ] || [ -f "/usr/bin/goshimmer" ] || [ -f "/usr/bin/wasp" ]; then
                        source $swarmConfigs/proxy.cfg
                        if (whiptail --title "Proxy - Deployment" --yesno --defaultno "Before deploying the proxy, please make sure that the domain and port are set for all nodes to be installed. If you use one domain for multiple nodes, please use different ports.\n\n\nAre you sure you want to continue?" 16 65); then
                            source $proxyModules/proxyDeployment
                            clear
                        fi
                    else
                        whiptail --title "Proxy - Deployment" --msgbox "No node software found on the system, please install a node first before you can install the proxy." 8 65
                    fi
                ;;
                "2)")
                    if (whiptail --title "Proxy - Removal" --yesno --defaultno "Do you really want to remove the proxy?" 8 65); then
                        {
                            echo 0
                            if [ "$ufw" = "true" ]; then
                                sudo ufw delete allow 80/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyHornetPort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyBeePort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyGoshimmerPort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyWaspDashboardPort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyWaspApiPort/tcp > /dev/null 2>&1
                            fi
                            echo 20
                            sudo apt -qq purge software-properties-common certbot python3-certbot-nginx nginx* -y > /dev/null 2>&1
                            echo 40
                            sudo apt -qq autoremove -y > /dev/null 2>&1
                            echo 60
                            if [ -d "/etc/nginx" ]; then
                                sudo rm -rf /etc/nginx > /dev/null 2>&1
                            fi
                            if [ -d "/etc/letsencrypt" ]; then
                                sudo rm -rf /etc/letsencrypt > /dev/null 2>&1
                            fi
                            sudo sed -i 's/^proxyHornetDomain=.*/proxyHornetDomain=""/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyBeeDomain=.*/proxyBeeDomain=""/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyGoshimmerDomain=.*/proxyGoshimmerDomain=""/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyHornetPort=.*/proxyHornetPort=/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyBeePort=.*/proxyBeePort=/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyGoshimmerPort=.*/proxyGoshimmerPort=/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyWaspDashboardPort=.*/proxyWaspDashboardPort=/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyWaspApiPort=.*/proxyWaspApiPort=/' $swarmConfigs/proxy.cfg
                            echo 100
                            sleep 0.25
                        } | whiptail --gauge "Please wait while removing the proxy..." 6 65 0
                        whiptail --title "Proxy - Removal" --msgbox "Proxy removed successfully!" 8 65
                    fi
                ;;
                "3)")
                    # Manual renew certificate if installed
                    if [ -f "/etc/letsencrypt/live/$proxyHornetDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyBeeDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyGoshimmerDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyWaspDashboardDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyWaspApiDomain/fullchain.pem" ]; then
                        sudo certbot renew
                    else
                        whiptail --title "Proxy Menu" --msgbox "Error! No SSL Certificate installed!" 8 65
                    fi
                ;;
            esac
        ;;
    esac
done
exitCode=0