#!/bin/bash
while [ $exitCode -lt 1 ]; do
    clear
    CHOICE=$(
        whiptail --title "Proxy Menu" --menu "\nChoose an option" 16 65 0 \
        "1)" "Proxy Info" \
        "2)" "Proxy Configuration" \
        "3)" "Proxy Debugging" \
        "4)" "Proxy Installer" 3>&2 2>&1 1>&3
    )

    exitStatus=$?
    if [ "$exitStatus" = "1" ]; then
        exitCode=1
    fi

    case $CHOICE in
        "1)")
            source $proxyModules/proxyInfo
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                clear
                CHOICE=$(
                    whiptail --title "Proxy Menu" --menu "\nChoose an option" 14 65 0 \
                    "1)" "Hornet proxy settings" \
                    "2)" "Bee proxy settings" \
                    "3)" "GoShimmer proxy settings" 3>&2 2>&1 1>&3
                )

                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        while [ $exitCode -lt 1 ]; do
                            clear
                            CHOICE=$(
                                whiptail --title "Proxy - Hornet Settings" --menu "\nChoose an option" 14 65 0 \
                                "1)" "Hornet domain" \
                                "2)" "Hornet port" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyHornetDomain=$proxyHornetDomain
                                    proxyHornetDomain=$(whiptail --inputbox "\nSet your domain or your ddns name for Hornet" 10 65 --title "Proxy - Hornet Domain" 3>&1 1>&2 2>&3)
                                    if [ ! -z "$proxyHornetDomain" ]; then
                                        if [ "$currentProxyHornetDomain" != "$proxyHornetDomain" ]; then
                                            sudo sed -i 's/^proxyHornetDomain=.*/proxyHornetDomain="'$proxyHornetDomain'"/' $swarmConfigs/proxy.cfg
                                            whiptail --title "Proxy - Hornet Domain" --msgbox "Domain for proxy set to \"$proxyHornetDomain\"" 8 65
                                        else
                                            whiptail --title "Proxy - Hornet Domain" --msgbox "No Hornet domain change detected" 8 65
                                        fi
                                    fi
                                ;;
                                "2)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyHornetPort=$proxyHornetPort
                                    proxyHornetPort=$(whiptail --inputbox "\nSet a port for Hornet" 10 65 $proxyHornetPort --title "Proxy - Hornet Port" 3>&1 1>&2 2>&3)
                                    if [ ! -z "$proxyHornetPort" ] && [ $proxyHornetPort -eq $proxyHornetPort ] 2>/dev/null; then
                                        if [ "$currentProxyHornetPort" != "$proxyHornetPort" ]; then
                                            ufw delete allow $currentProxyHornetPort/tcp > /dev/null 2>&1
                                            sudo sed -i 's/^proxyHornetPort=.*/proxyHornetPort='$proxyHornetPort'/' $swarmConfigs/proxy.cfg
                                            whiptail --title "Proxy - Hornet Port" --msgbox "The Hornet port was set to \"$proxyHornetPort\"" 8 65
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            clear
                            CHOICE=$(
                                whiptail --title "Proxy - Bee Settings" --menu "\nChoose an option" 14 65 0 \
                                "1)" "Bee domain" \
                                "2)" "Bee port" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyBeeDomain=$proxyBeeDomain
                                    proxyBeeDomain=$(whiptail --inputbox "\nSet your domain or your ddns name for Bee" 10 65 --title "Proxy - Bee Domain" 3>&1 1>&2 2>&3)
                                    if [ ! -z "$proxyBeeDomain" ]; then
                                        if [ "$currentProxyBeeDomain" != "$proxyBeeDomain" ]; then
                                            sudo sed -i 's/^proxyBeeDomain=.*/proxyBeeDomain="'$proxyBeeDomain'"/' $swarmConfigs/proxy.cfg
                                            whiptail --title "Proxy - Bee Domain" --msgbox "Domain for proxy set to \"$proxyBeeDomain\"" 8 65
                                        else
                                            whiptail --title "Proxy - Bee Domain" --msgbox "No Bee domain change detected" 8 65
                                        fi
                                    fi
                                ;;
                                "2)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyBeePort=$proxyBeePort
                                    proxyBeePort=$(whiptail --inputbox "\nSet a port for Bee" 10 65 $proxyBeePort --title "Proxy - Bee Port" 3>&1 1>&2 2>&3)
                                    if [ ! -z "$proxyBeePort" ] && [ $proxyBeePort -eq $proxyBeePort ] 2>/dev/null; then
                                        if [ "$currentProxyBeePort" != "$proxyBeePort" ]; then
                                            ufw delete allow $currentProxyBeePort/tcp > /dev/null 2>&1
                                            sudo sed -i 's/^proxyBeePort=.*/proxyBeePort='$proxyBeePort'/' $swarmConfigs/proxy.cfg
                                            whiptail --title "Proxy - Bee Port" --msgbox "The Bee port was set to \"$proxyBeePort\"" 8 65
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "3)")
                        while [ $exitCode -lt 1 ]; do
                            clear
                            CHOICE=$(
                                whiptail --title "Proxy - GoShimmer Settings" --menu "\nChoose an option" 14 65 0 \
                                "1)" "GoShimmer domain" \
                                "2)" "GoShimmer port" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyGoshimmerDomain=$proxyGoshimmerDomain
                                    proxyGoshimmerDomain=$(whiptail --inputbox "\nSet your domain or your ddns name for GoShimmer" 10 65 --title "Proxy - GoShimmer Domain" 3>&1 1>&2 2>&3)
                                    if [ ! -z "$proxyGoshimmerDomain" ]; then
                                        if [ "$currentProxyGoshimmerDomain" != "$proxyGoshimmerDomain" ]; then
                                            sudo sed -i 's/^proxyGoshimmerDomain=.*/proxyGoshimmerDomain="'$proxyGoshimmerDomain'"/' $swarmConfigs/proxy.cfg
                                            whiptail --title "Proxy - GoShimmer Domain" --msgbox "Domain for proxy set to \"$proxyGoshimmerDomain\"" 8 65
                                        else
                                            whiptail --title "Proxy - GoShimmer Domain" --msgbox "No GoShimmer domain change detected" 8 65
                                        fi
                                    fi
                                ;;
                                "2)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyGoshimmerPort=$proxyGoshimmerPort
                                    proxyGoshimmerPort=$(whiptail --inputbox "\nSet a port for GoShimmer" 10 65 $proxyGoshimmerPort --title "Proxy - GoShimmer Port" 3>&1 1>&2 2>&3)
                                    if [ ! -z "$proxyGoshimmerPort" ] && [ $proxyGoshimmerPort -eq $proxyGoshimmerPort ] 2>/dev/null; then
                                        if [ "$currentProxyGoshimmerPort" != "$proxyGoshimmerPort" ]; then
                                            ufw delete allow $currentProxyGoshimmerPort/tcp > /dev/null 2>&1
                                            sudo sed -i 's/^proxyGoshimmerPort=.*/proxyGoshimmerPort='$proxyGoshimmerPort'/' $swarmConfigs/proxy.cfg
                                            whiptail --title "Proxy - GoShimmer Port" --msgbox "The GoShimmer port was set to \"$proxyGoshimmerPort\"" 8 65
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            CHOICE=$(
                whiptail --title "Proxy Menu" --menu "\nChoose an option" 16 65 0 \
                "1)" "Show proxy status" \
                "2)" "Start/stop proxy" 3>&2 2>&1 1>&3
            )
            case $CHOICE in
                "1)")
                    proxyStatus="$(sudo systemctl status nginx)"
                    whiptail --title "Proxy Status" --msgbox "$proxyStatus" 15 65
                ;;
                "2)")
                    CHOICE=$(
                        whiptail --title "Proxy Menu" --menu "\nChoose your option" 16 65 0 \
                        "1)" "Restart Proxy" \
                        "2)" "Start Proxy" \
                        "3)" "Stop Proxy" 3>&2 2>&1 1>&3
                    )
                    case $CHOICE in
                        "1)")
                            {
                                echo 0
                                sleep 0.25
                                echo 66
                                sudo systemctl restart nginx
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while re-starting the proxy..." 6 65 0
                            whiptail --scrolltext --title "Proxy Menu" --msgbox "Proxy restarted successfully!" 8 65
                        ;;
                        "2)")
                            {
                                echo 0
                                sleep 0.25
                                echo 66
                                sudo systemctl start nginx
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while starting the proxy..." 6 65 0
                            whiptail --title "Proxy Menu" --msgbox "Proxy started successfully!" 8 65
                        ;;
                        "3)")
                            {
                                echo 0
                                sleep 0.25
                                echo 66
                                sudo systemctl stop nginx
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while stopping the proxy..." 6 65 0
                            whiptail --title "Proxy Menu" --msgbox "Proxy stopped successfully!" 8 65
                        ;;
                    esac
                ;;
            esac
        ;;
        "4)")
            CHOICE=$(
                whiptail --title "Proxy Menu" --menu "\nChoose an option" 16 65 0 \
                "1)" "Install/Deploy the proxy" \
                "2)" "Remove the proxy" \
                "3)" "Renew SSL certificate" 3>&2 2>&1 1>&3
            )
            case $CHOICE in
                "1)")
                    if [ -f "/usr/bin/hornet" ] || [ -f "/usr/bin/bee" ] || [ -f "/usr/bin/goshimmer" ]; then
                        source $swarmConfigs/proxy.cfg
                        if [ -z "$domain" ]; then
                            whiptail --title "Proxy Menu" --msgbox "Please set your domain first before continuing!" 8 65
                        else
                            if [ -f "/usr/bin/hornet" ]; then
                                if [ -z "$proxyHornetPort" ]; then
                                    hornetApiPortInfo="\nHornet: \"Not defined\""
                                else
                                    hornetApiPortInfo="\nHornet: $proxyHornetPort"
                                fi
                            fi
                            if [ -f "/usr/bin/bee" ]; then
                                if [ -z "$beeApiPort" ]; then
                                    beeApiPortInfo="\nBee: \"Not defined\""
                                else
                                    beeApiPortInfo="\nBee: $beeApiPort"
                                fi
                            fi
                            if [ -f "/usr/bin/goshimmer" ]; then
                                if [ -z "$goshimmerApiPort" ]; then
                                    goshimmerApiPortInfo="\nGoShimmer: \"Not defined\""
                                else
                                    goshimmerApiPortInfo="\nGoShimmer: $goshimmerApiPort"
                                fi
                            fi
                            if (whiptail --title "Proxy - Deployment" --yesno --defaultno "Before you install/deploy the proxy, please make sure that none of the following ports are used twice or change them before you deploy.\n$hornetApiPortInfo$beeApiPortInfo$goshimmerApiPortInfo\n\n\nAre all ports set and different?" 16 65); then
                                if [ ! -f "/etc/letsencrypt/live/$domain/fullchain.pem" ]; then
                                    # Run the nginx module for the proxy
                                    email=$(whiptail --inputbox "\nPlease enter your e-mail address so that a certificate can be issued" 10 65 --title "Proxy - Certificate" 3>&1 1>&2 2>&3)
                                    if [ ! -z "$email" ]; then
                                        source $proxyModules/proxyDeployment
                                        clear
                                    else
                                        whiptail --title "Proxy - Deployment" --msgbox "No valid email address entered!" 8 65
                                    fi
                                else
                                    source $proxyModules/proxyDeployment
                                    clear
                                fi
                            fi
                        fi
                    else
                        whiptail --title "Proxy - Deployment" --msgbox "No node software found on the system, please install a node first before you can install the proxy." 8 65
                    fi
                ;;
                "2)")
                    if (whiptail --title "Proxy - Removal" --yesno --defaultno "Do you really want to remove the proxy?" 8 65); then
                        {
                            echo 0
                            if [ "$ufw" = "true" ]; then
                                sudo ufw delete allow 80/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyHornetPort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $beeApiPort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $goshimmerApiPort/tcp > /dev/null 2>&1
                            fi
                            echo 20
                            sudo apt -qq purge software-properties-common certbot python3-certbot-nginx nginx* -y > /dev/null 2>&1
                            echo 40
                            sudo apt -qq autoremove -y > /dev/null 2>&1
                            echo 60
                            if [ -d "/etc/nginx" ]; then
                                sudo rm -rf /etc/nginx > /dev/null 2>&1
                            fi
                            if [ -d "/etc/letsencrypt" ]; then
                                sudo rm -rf /etc/letsencrypt > /dev/null 2>&1
                            fi
                            sudo sed -i 's/^proxyHornetPort=.*/proxyHornetPort=/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^beeApiPort=.*/beeApiPort=/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^goshimmerApiPort=.*/goshimmerApiPort=/' $swarmConfigs/proxy.cfg
                            echo 100
                            sleep 0.25
                        } | whiptail --gauge "Please wait while removing the proxy..." 6 65 0
                        whiptail --title "Proxy - Removal" --msgbox "Proxy removed successfully!" 8 65
                    fi
                ;;
                "3)")
                    # Manual renew certificate if installed
                    if [ -f "/etc/letsencrypt/live/$domain/fullchain.pem" ]; then
                        sudo certbot renew
                    else
                        whiptail --title "Proxy Menu" --msgbox "Error! No SSL Certificate installed!" 8 65
                    fi
                ;;
            esac
        ;;
    esac
done
exitCode=0