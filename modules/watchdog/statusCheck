#!/bin/bash
source $watchdogLog

if [ -n "$hornetStatusCounter" ]; then
    if ! [ "$hornetStatusCounter" -eq "$hornetStatusCounter" ] 2>/dev/null; then
        hornetStatusCounter=0
        sudo sed -i 's/^hornetStatusCounter=.*/hornetStatusCounter='$hornetStatusCounter'/' $watchdogLog
    fi
else
    hornetStatusCounter=0
    sudo sed -i 's/^hornetStatusCounter=.*/hornetStatusCounter='$hornetStatusCounter'/' $watchdogLog
fi

if [ -n "$goshimmerStatusCounter" ]; then
    if ! [ "$goshimmerStatusCounter" -eq "$goshimmerStatusCounter" ] 2>/dev/null; then
        goshimmerStatusCounter=0
        sudo sed -i 's/^goshimmerStatusCounter=.*/goshimmerStatusCounter='$goshimmerStatusCounter'/' $watchdogLog
    fi
else
    goshimmerStatusCounter=0
    sudo sed -i 's/^goshimmerStatusCounter=.*/goshimmerStatusCounter='$goshimmerStatusCounter'/' $watchdogLog
fi

# Hornet Status Check
if [ "$hornetStatus" != "active" ] && [ -f "/usr/bin/hornet" ]; then
    sudo systemctl stop hornet
    restartDate=`date '+%d-%m-%Y %H-%M-%S'`
    if [ "$hornetStatusCounter" -ge "2" ]; then
        if [ "$hornetAllowDbReset" = "true" ]; then
            sudo rm -rf $hornetHome/${hornetNetwork}db $hornetHome/snapshots/${hornetNetwork}/*.bin
            echo "$restartDate [WACHTDOG] - HORNET - ${hornetNetwork}DB deleted because max. inactive counter reached" >> $swarmLog
        fi
        hornetStatusCounter=0
    else
        let hornetStatusCounter=$hornetStatusCounter+1
    fi
    sudo systemctl restart hornet
    sudo sed -i 's/^hornetStatusCounter=.*/hornetStatusCounter='$hornetStatusCounter'/' $watchdogLog
    echo "$restartDate [WACHTDOG] - HORNET - Node restarted because service was not active" >> $swarmLog
else
    if [ "$hornetStatusCounter" -gt "0" ]; then
        let hornetStatusCounter=$hornetStatusCounter-1
        sudo sed -i 's/^hornetStatusCounter=.*/hornetStatusCounter='$hornetStatusCounter'/' $watchdogLog
    fi
fi

# Bee Status Check
if [ "$beeStatus" != "active" ] && [ -f "/usr/bin/bee" ]; then
    sudo systemctl stop bee
    restartDate=`date '+%d-%m-%Y %H-%M-%S'`
    if [ "$beeStatusCounter" -ge "2" ]; then
        if [ "$beeAllowDbReset" = "true" ]; then
            sudo rm -rf $beeHome/storage $beeHome/snapshots
            echo "$restartDate [WACHTDOG] - BEE - Database deleted because max. inactive counter reached" >> $swarmLog
        fi
        beeStatusCounter=0
    else
        let beeStatusCounter=$beeStatusCounter+1
    fi
    sudo systemctl restart bee
    sudo sed -i 's/^beeStatusCounter=.*/beeStatusCounter='$beeStatusCounter'/' $watchdogLog
    echo "$restartDate [WACHTDOG] - BEE - Node restarted because service was not active" >> $swarmLog
else
    if [ "$beeStatusCounter" -gt "0" ]; then
        let beeStatusCounter=$beeStatusCounter-1
        sudo sed -i 's/^beeStatusCounter=.*/beeStatusCounter='$beeStatusCounter'/' $watchdogLog
    fi
fi

# GoShimmer Status Check
if [ "$goshimmerStatus" != "active" ] && [ -f "/usr/bin/goshimmer" ]; then
    sudo systemctl stop goshimmer
    restartDate=`date '+%d-%m-%Y %H-%M-%S'`
    if [ "$goshimmerStatusCounter" -ge "2" ]; then
        if [ "$goshimmerAllowDbReset" = "true" ]; then
            sudo rm -rf $goshimmerDir/mainnetdb
            sudo -u goshimmer wget -q -O $goshimmerDir/snapshot.bin https://dbfiles-goshimmer.s3.eu-central-1.amazonaws.com/snapshots/nectar/snapshot-latest.bin
            echo "$restartDate [WACHTDOG] - GOSHIMMER - Database deleted because max. inactive counter reached" >> $swarmLog
        fi
        goshimmerStatusCounter=0
    else
        let goshimmerStatusCounter=$goshimmerStatusCounter+1
    fi
    sudo systemctl restart goshimmer
    sudo sed -i 's/^goshimmerStatusCounter=.*/goshimmerStatusCounter='$goshimmerStatusCounter'/' $watchdogLog
    echo "$restartDate [WACHTDOG] - GOSHIMMER - Node restarted because service was not active" >> $swarmLog
else
    if [ "$goshimmerStatusCounter" -gt "0" ]; then
        let goshimmerStatusCounter=$goshimmerStatusCounter-1
        sudo sed -i 's/^goshimmerStatusCounter=.*/goshimmerStatusCounter='$goshimmerStatusCounter'/' $watchdogLog
    fi
fi