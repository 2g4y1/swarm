#!/bin/bash
source $logs/watchdog

if [ -n "$hornetStatusCounter" ]; then
    if ! [ "$hornetStatusCounter" -eq "$hornetStatusCounter" ] 2>/dev/null; then
        hornetStatusCounter=0
        sudo sed -i 's/^hornetStatusCounter=.*/hornetStatusCounter='$hornetStatusCounter'/' $logs/watchdog
    fi
else
    hornetStatusCounter=0
    sudo sed -i 's/^hornetStatusCounter=.*/hornetStatusCounter='$hornetStatusCounter'/' $logs/watchdog
fi

if [ -n "$goshimmerStatusCounter" ]; then
    if ! [ "$goshimmerStatusCounter" -eq "$goshimmerStatusCounter" ] 2>/dev/null; then
        goshimmerStatusCounter=0
        sudo sed -i 's/^goshimmerStatusCounter=.*/goshimmerStatusCounter='$goshimmerStatusCounter'/' $logs/watchdog
    fi
else
    goshimmerStatusCounter=0
    sudo sed -i 's/^goshimmerStatusCounter=.*/goshimmerStatusCounter='$goshimmerStatusCounter'/' $logs/watchdog
fi

# Hornet Status Check
if [ "$hornetStatus" != "active" ] && [ -f "/usr/bin/hornet" ]; then
    sudo systemctl stop hornet
    restartDate=`date '+%d-%m-%Y %H-%M-%S'`
    if [ "$hornetStatusCounter" -ge "2" ]; then
        if [ "$hornetAllowDbReset" = "true" ]; then
            sudo rm -rf $hornetDir/${network}db $hornetDir/snapshots/${network}/*.bin
            echo "$restartDate [WACHTDOG] - HORNET - ${network}DB deleted because max. inactive counter reached" >> $logs/swarm.log
        fi
        sudo rm -rf $hornetDir/p2pstore
        hornetStatusCounter=0
    else
        let hornetStatusCounter=$hornetStatusCounter+1
    fi
    sudo systemctl restart hornet
    sudo sed -i 's/^hornetStatusCounter=.*/hornetStatusCounter='$hornetStatusCounter'/' $logs/watchdog
    echo "$restartDate [WACHTDOG] - HORNET - Node restarted because service was not active" >> $logs/swarm.log
else
    if [ "$hornetStatusCounter" -gt "0" ]; then
        let hornetStatusCounter=$hornetStatusCounter-1
        sudo sed -i 's/^hornetStatusCounter=.*/hornetStatusCounter='$hornetStatusCounter'/' $logs/watchdog
    fi
fi

# GoShimmer Status Check
if [ "$goshimmerStatus" != "active" ] && [ -f "/usr/bin/goshimmer" ]; then
    sudo systemctl stop goshimmer
    restartDate=`date '+%d-%m-%Y %H-%M-%S'`
    if [ "$goshimmerStatusCounter" -ge "2" ]; then
        if [ "$goshimmerAllowDbReset" = "true" ]; then
            sudo rm -rf $goshimmerDir/mainnetdb
            sudo -u goshimmer wget -q -O $goshimmerDir/snapshot.bin https://dbfiles-goshimmer.s3.eu-central-1.amazonaws.com/snapshots/nectar/snapshot-latest.bin
            echo "$restartDate [WACHTDOG] - GOSHIMMER - Database deleted because max. inactive counter reached" >> $logs/swarm.log
        fi
        goshimmerStatusCounter=0
    else
        let goshimmerStatusCounter=$goshimmerStatusCounter+1
    fi
    sudo systemctl restart goshimmer
    sudo sed -i 's/^goshimmerStatusCounter=.*/goshimmerStatusCounter='$goshimmerStatusCounter'/' $logs/watchdog
    echo "$restartDate [WACHTDOG] - GOSHIMMER - Node restarted because service was not active" >> $logs/swarm.log
else
    if [ "$goshimmerStatusCounter" -gt "0" ]; then
        let goshimmerStatusCounter=$goshimmerStatusCounter-1
        sudo sed -i 's/^goshimmerStatusCounter=.*/goshimmerStatusCounter='$goshimmerStatusCounter'/' $logs/watchdog
    fi
fi