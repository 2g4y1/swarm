#!/bin/bash
source $logs/dbPruner
source $logs/watchdog

if [ -n "$syncCounter" ]; then
    if ! [ "$syncCounter" -eq "$syncCounter" ] 2>/dev/null; then
        syncCounter=0
        sudo sed -i 's/syncCounter=.*/syncCounter='$syncCounter'/' $logs/watchdog
    fi
else
    syncCounter=0
    sudo sed -i 's/syncCounter=.*/syncCounter='$syncCounter'/' $logs/watchdog
fi

healthy="$(curl -s -X GET "http://localhost:14265/api/v1/info" -H  "accept: application/json"|jq '.data.isHealthy')"
if [ "$checkSync" = "true" ] && [ "$dbPrunerLock" = "false" ] && [ "$status" = "active" ] && [ "$healthy" = "false" ]; then
    lmi="$(curl -s -X GET "http://localhost:14265/api/v1/info" -H  "accept: application/json"|jq '.data.latestMilestoneIndex')"
    cmi="$(curl -s -X GET "http://localhost:14265/api/v1/info" -H  "accept: application/json"|jq '.data.confirmedMilestoneIndex')"
    let dlmi="$lmi-$cmi"
    if [ "$dlmi" -gt "$maxLmi" ]; then
        restartDate=`date '+%d-%m-%Y %H-%M-%S'`
        sudo systemctl stop hornet
        if [ $syncCounter -gt 5 ]; then
            if [ "$keepDb" = "false" ]; then
                sudo rm -rf $hornetDir/${network}db $hornetDir/snapshots/${network}/*.bin
                echo "$restartDate [WACHTDOG] - SYNCCHECK - ${network}DB deleted because maxLmi reached!" >> $logs/swarm.log
            fi
            syncCounter=0
        else
            let syncCounter=$syncCounter+1
        fi
        sudo systemctl start hornet
        echo "$restartDate [WACHTDOG] - SYNCCHECK - Hornet restarted because maxLmi reached!" >> $logs/swarm.log
        sudo sed -i 's/syncCounter=.*/syncCounter='$syncCounter'/' $logs/watchdog
        sudo sed -i "s,restartDate=.*,restartDate=\"$restartDate\"," $logs/watchdog
    fi
else
    if [ "$syncCounter" -gt "0" ]; then
        let syncCounter=$syncCounter-1
        sudo sed -i 's/syncCounter=.*/syncCounter='$syncCounter'/' $logs/watchdog
    fi
fi
