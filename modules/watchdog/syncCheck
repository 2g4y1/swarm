#!/bin/bash
source $logs/dbPruner
source $logs/watchdog

if [ "$checkSync" = "true" ] && [ "$DbPrunerLock" = "false" ] && [ "$status" = "active" ]; then
    lmi="$(curl -s -X GET "http://localhost:14265/api/v1/info" -H  "accept: application/json"|jq '.data.latestMilestoneIndex')"
    lsmi="$(curl -s -X GET "http://localhost:14265/api/v1/info" -H  "accept: application/json"|jq '.data.solidMilestoneIndex')"
    let dlmi="$lmi-$lsmi"
    if [ "$dlmi" -gt "$maxLmi" ]; then
        if [ -n "$syncCounter" ]; then
            if ! [ "$syncCounter" -eq "$syncCounter" ] 2>/dev/null; then
                syncCounter=0
            fi
        else
            syncCounter=0
        fi
        sudo systemctl stop $node
        if [ "$syncCounter" -gt "2" ]; then
            if [ "$keepDb" = "false" ]; then
                sudo rm -rf $hornetDir/${network}db $hornetDir/snapshots/${network}/*.bin
                echo "$restartDate WACHTDOG - SYNCCHECK - ${network}DB deleted while maxLmi reached!" >> $logs/swarm.log
            fi
            syncCounter=0
        else
            let syncCounter=$syncCounter+1
        fi
        sudo systemctl start $node
        echo "$restartDate WACHTDOG - SYNCCHECK - Hornet restarted while maxLmi reached!" >> $logs/swarm.log
        restartDate=`date '+%d-%m-%Y %H-%M-%S'`
        sudo sed -i 's/syncCounter=.*/syncCounter=0/' $logs/watchdog
        sudo sed -i "s,restartDate=.*,restartDate=\"$restartDate\"," $logs/watchdog
    fi
fi
