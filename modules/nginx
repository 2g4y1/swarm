#!/bin/bash

# Check if the nginx folder for the htpasswd exist
if [ ! -d "/etc/nginx" ];
    sudo mkdir -p /etc/nginx/dashpw
    sudo mkdir -p /etc/nginx/api
fi

# Check if the .htpasswd file for the dash already exist
if [ ! -f "/etc/nginx/dash/.htpasswd" ]; then
    sudo touch /etc/nginx/dash/.htpasswd
fi

# Check if the .htpasswd file for the api already exist
if [ ! -f "/etc/nginx/api/.htpasswd" ]; then
    sudo touch /etc/nginx/api/.htpasswd
fi

# Check if letsencrypt is already installed on the node
if [ ! -d "/etc/letsencrypt" ]; then
    echo -e $text_yellow && echo " Installing necessary packages..." && echo -e $text_reset
    sudo apt install software-properties-common certbot python3-certbot-nginx -y
    rm -rf /etc/nginx/sites-enabled/default /etc/nginx/sites-available/default
    sudo cp $templates/nginx_default.template /etc/nginx/sites-enabled/default
    sudo find /etc/nginx/sites-enabled/default -type f -exec sed -i 's/domain.tld/'$domain'/g' {} \;
    sudo systemctl restart nginx

    source $modules/adduserproxy
fi

# Check if a folder of the domain for letsencrypt already exist
if [ ! -d "/etc/letsencrypt/live/$domain" ]; then
    echo -e $text_yellow && echo " Starting SSL-Certificate installation..." && echo -e $text_reset
    sudo certbot --nginx -d $domain
    if [ -f "/etc/letsencrypt/live/$domain/fullchain.pem" ]; then
        echo -e $text_yellow && echo " SSL certificate installed!" && echo -e $text_reset
    else
        echo -e $text_red " Error! SSL Certificate not found!"
    fi
fi

# Check if the certificate for the domain already exist
if [ -f "/etc/letsencrypt/live/$domain/fullchain.pem" ]; then
    echo -e $text_yellow && echo " Copying Nginx configuration..." && echo -e $text_reset
    rm -rf /etc/nginx/sites-enabled/default /etc/nginx/sites-available/default
    echo -e $text_yellow && read -p " Would you like to protect you node api (y/N): " selector_protectapi
    if [ "$selector_protectapi" = "y" ] || [ "$selector_protectapi" = "Y" ]; then
        sudo cp $templates/nginx_auth.template /etc/nginx/sites-enabled/default
    else
        sudo cp $templates/nginx.template /etc/nginx/sites-enabled/default
    fi
    sudo find /etc/nginx/sites-enabled/default -type f -exec sed -i 's/domain.tld/'$domain'/g' {} \;
    sudo find /etc/nginx/sites-enabled/default -type f -exec sed -i 's/443/'$nodeport'/g' {} \;
    sudo find /etc/nginx/sites-enabled/default -type f -exec sed -i 's/\#NGINX/''/g' {} \;
    sudo systemctl restart nginx
    echo -e $text_yellow && echo " Nginx configurationen updated!" && echo -e $text_reset
fi
echo -e $text_yellow && echo " Reverse proxy configuration finished!" && echo -e $text_reset
echo -e $TEXT_RED_B && pause ' Press [Enter] key to continue...'
echo -e $text_reset

#Unset all var
unset selector_protectapi