#!/bin/bash
# Check if pow is enabled

if [ -f "$modules/personal" ]; then
    source $modules/personal
fi

parser="$(jq '.httpAPI.permitRemoteAccess | contains(["attachToTangle"])' $hornetdir/config.json)"
if [ "$pow" = "true" ] && [ "$parser" != "true" ]; then
    sudo jq '.httpAPI.permitRemoteAccess |= .+ ["attachToTangle"]' $hornetdir/config.json|sponge $hornetdir/config.json
    restart=true
fi
parser="$(jq '.httpAPI.permitRemoteAccess | contains(["attachToTangle"])' $hornetdir/config_comnet.json)"
if [ "$pow" = "true" ] && [ "$parser" != "true" ]; then
    sudo jq '.httpAPI.permitRemoteAccess |= .+ ["attachToTangle"]' $hornetdir/config_comnet.json|sponge $hornetdir/config_comnet.json
    restart=true
fi
parser="$(jq '.httpAPI.permitRemoteAccess | contains(["attachToTangle"])' $hornetdir/config_devnet.json)"
if [ "$pow" = "true" ] && [ "$parser" != "true" ]; then
    sudo jq '.httpAPI.permitRemoteAccess |= .+ ["attachToTangle"]' $hornetdir/config_devnet.json|sponge $hornetdir/config_devnet.json
    restart=true
fi

# Check if pow is disabled
parser="$(jq '.httpAPI.permitRemoteAccess | contains(["attachToTangle"])' $hornetdir/config.json)"
if [ "$pow" = "false" ] && [ "$parser" != "false" ]; then
    sudo jq '.httpAPI.permitRemoteAccess |= .- ["attachToTangle"]' $hornetdir/config.json|sponge $hornetdir/config.json
    restart=true
fi
parser="$(jq '.httpAPI.permitRemoteAccess | contains(["attachToTangle"])' $hornetdir/config_comnet.json)"
if [ "$pow" = "false" ] && [ "$parser" != "false" ]; then
    sudo jq '.httpAPI.permitRemoteAccess |= .- ["attachToTangle"]' $hornetdir/config_comnet.json|sponge $hornetdir/config_comnet.json
    restart=true
fi
parser="$(jq '.httpAPI.permitRemoteAccess | contains(["attachToTangle"])' $hornetdir/config_devnet.json)"
if [ "$pow" = "false" ] && [ "$parser" != "false" ]; then
    sudo jq '.httpAPI.permitRemoteAccess |= .- ["attachToTangle"]' $hornetdir/config_devnet.json|sponge $hornetdir/config_devnet.json
    restart=true
fi

# Check pruning settings
parser="$(jq '.snapshots.pruning.enabled' $hornetdir/config.json)"
if [ "$parser" != "$pruning" ]; then
    if [ "$pruning" = "true" ] || [ "$pruning" = "false" ]; then
        sudo jq '.snapshots.pruning.enabled = '$pruning'' $hornetdir/config.json|sponge $hornetdir/config.json
        restart=true
    fi
fi
parser="$(jq '.snapshots.pruning.enabled' $hornetdir/config_comnet.json)"
if [ "$parser" != "$pruning" ]; then
    if [ "$pruning" = "true" ] || [ "$pruning" = "false" ]; then
        sudo jq '.snapshots.pruning.enabled = '$pruning'' $hornetdir/config_comnet.json|sponge $hornetdir/config_comnet.json
        restart=true
    fi
fi
parser="$(jq '.snapshots.pruning.enabled' $hornetdir/config_devnet.json)"
if [ "$parser" != "$pruning" ]; then
    if [ "$pruning" = "true" ] || [ "$pruning" = "false" ]; then
        sudo jq '.snapshots.pruning.enabled = '$pruning'' $hornetdir/config_devnet.json|sponge $hornetdir/config_devnet.json
        restart=true
    fi
fi

# Check pruning delay settings
parser="$(jq '.snapshots.pruning.delay' $hornetdir/config.json)"
if [ "$parser" != "$pruningdelay" ]; then
    if [ -n "$pruningdelay" ] && [ "$pruningdelay" -ge 50 ] 2>/dev/null; then
        sudo jq '.snapshots.pruning.delay = '$pruningdelay'' $hornetdir/config.json|sponge $hornetdir/config.json
        restart=true
    fi
fi
parser="$(jq '.snapshots.pruning.delay' $hornetdir/config_comnet.json)"
if [ "$parser" != "$pruningdelay" ]; then
    if [ -n "$pruningdelay" ] && [ "$pruningdelay" -ge 50 ] 2>/dev/null; then
        sudo jq '.snapshots.pruning.delay = '$pruningdelay'' $hornetdir/config_comnet.json|sponge $hornetdir/config_comnet.json
        restart=true
    fi
fi
parser="$(jq '.snapshots.pruning.delay' $hornetdir/config_devnet.json)"
if [ "$parser" != "$pruningdelay" ]; then
    if [ -n "$pruningdelay" ] && [ "$pruningdelay" -ge 50 ] 2>/dev/null; then
        sudo jq '.snapshots.pruning.delay = '$pruningdelay'' $hornetdir/config_devnet.json|sponge $hornetdir/config_devnet.json
        restart=true
    fi
fi

# Check neighbor port
parser="$(jq '.network.gossip.bindAddress' $hornetdir/config.json)"
if [ "\"0.0.0.0:$neighborport\"" != "$parser" ]; then
    if [ -n "$neighborport" ] && [ "$neighborport" -ge 0 ] 2>/dev/null; then
        sudo jq '.network.gossip.bindAddress = "0.0.0.0:'$neighborport'"' $hornetdir/config.json|sponge $hornetdir/config.json
        restart=true
    fi
fi
parser="$(jq '.network.gossip.bindAddress' $hornetdir/config_comnet.json)"
if [ "\"0.0.0.0:$neighborport\"" != "$parser" ]; then
    if [ -n "$neighborport" ] && [ "$neighborport" -ge 0 ] 2>/dev/null; then
        sudo jq '.network.gossip.bindAddress = "0.0.0.0:'$neighborport'"' $hornetdir/config_comnet.json|sponge $hornetdir/config_comnet.json
        restart=true
    fi
fi
parser="$(jq '.network.gossip.bindAddress' $hornetdir/config_devnet.json)"
if [ "\"0.0.0.0:$neighborport\"" != "$parser" ]; then
    if [ -n "$neighborport" ] && [ "$neighborport" -ge 0 ] 2>/dev/null; then
        sudo jq '.network.gossip.bindAddress = "0.0.0.0:'$neighborport'"' $hornetdir/config_devnet.json|sponge $hornetdir/config_devnet.json
        restart=true
    fi
fi

# Check autopeering port
parser="$(jq '.network.autopeering.bindAddress' $hornetdir/config.json)"
if [ "\"0.0.0.0:$autopeeringport\"" != "$parser" ]; then
    if [ -n "$autopeeringport" ] && [ "$autopeeringport" -ge 0 ] 2>/dev/null; then
        sudo jq '.network.autopeering.bindAddress = "0.0.0.0:'$autopeeringport'"' $hornetdir/config.json|sponge $hornetdir/config.json
        restart=true
    fi
fi
parser="$(jq '.network.autopeering.bindAddress' $hornetdir/config_comnet.json)"
if [ "\"0.0.0.0:$autopeeringport\"" != "$parser" ]; then
    if [ -n "$autopeeringport" ] && [ "$autopeeringport" -ge 0 ] 2>/dev/null; then
        sudo jq '.network.autopeering.bindAddress = "0.0.0.0:'$autopeeringport'"' $hornetdir/config_comnet.json|sponge $hornetdir/config_comnet.json
        restart=true
    fi
fi
parser="$(jq '.network.autopeering.bindAddress' $hornetdir/config_devnet.json)"
if [ "\"0.0.0.0:$autopeeringport\"" != "$parser" ]; then
    if [ -n "$autopeeringport" ] && [ "$autopeeringport" -ge 0 ] 2>/dev/null; then
        sudo jq '.network.autopeering.bindAddress = "0.0.0.0:'$autopeeringport'"' $hornetdir/config_devnet.json|sponge $hornetdir/config_devnet.json
        restart=true
    fi
fi

# Check Seed
parser="$(jq '.network.autopeering.seed' $hornetdir/config.json)"
if [ "\"$seed\"" != "$parser" ] && [ "$seed" != "" ]; then
    sudo jq '.network.autopeering.seed = '\"$seed\"'' $hornetdir/config.json|sponge $hornetdir/config.json
    restart=true
fi
parser="$(jq '.network.autopeering.seed' $hornetdir/config_comnet.json)"
if [ "\"$seed\"" != "$parser" ] && [ "$seed" != "" ]; then
    sudo jq '.network.autopeering.seed = '\"$seed\"'' $hornetdir/config_comnet.json|sponge $hornetdir/config_comnet.json
    restart=true
fi
parser="$(jq '.network.autopeering.seed' $hornetdir/config_devnet.json)"
if [ "\"$seed\"" != "$parser" ] && [ "$seed" != "" ]; then
    sudo jq '.network.autopeering.seed = '\"$seed\"'' $hornetdir/config_devnet.json|sponge $hornetdir/config_devnet.json
    restart=true
fi

# Change snapshot interval
parser="$(jq '.snapshots.local.intervalSynced' $hornetdir/config.json)"
if [ "\"$lsdelay\"" != "$parser" ]; then
    sudo jq '.snapshots.local.intervalSynced = '$lsdelay'' $hornetdir/config.json|sponge $hornetdir/config.json
    restart=true
fi
parser="$(jq '.snapshots.local.intervalSynced' $hornetdir/config_comnet.json)"
if [ "\"$lsdelay\"" != "$parser" ]; then
    sudo jq '.snapshots.local.intervalSynced = '$lsdelay'' $hornetdir/config_comnet.json|sponge $hornetdir/config_comnet.json
    restart=true
fi
parser="$(jq '.snapshots.local.intervalSynced' $hornetdir/config_devnet.json)"
if [ "\"$lsdelay\"" != "$parser" ]; then
    sudo jq '.snapshots.local.intervalSynced = '$lsdelay'' $hornetdir/config_devnet.json|sponge $hornetdir/config_devnet.json
    restart=true
fi

# Peering (inbound)
if [ -n "$inbound" ] && [ "$inbound" -gt 0 ] 2>/dev/null; then
    parser="$(jq '.network.autopeering.inboundPeers' $hornetdir/config.json)"
    if [ "$parser" = "null" ] || [ "$parser" != "$inbound" ] ; then
        sudo jq '.network.autopeering.inboundPeers = '$inbound'' $hornetdir/config.json|sponge $hornetdir/config.json
        restart=true
    fi
    parser="$(jq '.network.autopeering.inboundPeers' $hornetdir/config_comnet.json)"
    if [ "$parser" = "null" ] || [ "$parser" != "$inbound" ]; then
        sudo jq '.network.autopeering.inboundPeers = '$inbound'' $hornetdir/config_comnet.json|sponge $hornetdir/config_comnet.json
        restart=true
    fi
    parser="$(jq '.network.autopeering.inboundPeers' $hornetdir/config_devnet.json)"
    if [ "$parser" = "null" ] || [ "$parser" != "$inbound" ]; then
        sudo jq '.network.autopeering.inboundPeers = '$inbound'' $hornetdir/config_devnet.json|sponge $hornetdir/config_devnet.json
        restart=true
    fi
fi

# Peering (outbound)
if [ -n "$outbound" ] && [ "$outbound" -gt 0 ] 2>/dev/null; then
    parser="$(jq '.network.autopeering.outboundPeers' $hornetdir/config.json)"
    if [ "$parser" != "null" ] && [ "$parser" != "$outbound" ]; then
        sudo jq '.network.autopeering.outboundPeers = '$outbound'' $hornetdir/config.json|sponge $hornetdir/config.json
        restart=true
    fi
    parser="$(jq '.network.autopeering.outboundPeers' $hornetdir/config_comnet.json)"
    if [ "$parser" != "null" ] && [ "$parser" != "$outbound" ]; then
        sudo jq '.network.autopeering.outboundPeers = '$outbound'' $hornetdir/config_comnet.json|sponge $hornetdir/config_comnet.json
        restart=true
    fi
    parser="$(jq '.network.autopeering.outboundPeers' $hornetdir/config_devnet.json)"
    if [ "$parser" != "null" ] && [ "$parser" != "$outbound" ]; then
        sudo jq '.network.autopeering.outboundPeers = '$outbound'' $hornetdir/config_devnet.json|sponge $hornetdir/config_devnet.json
        restart=true
    fi
fi


# Unset all var
unset parser
